{"version":3,"sources":["components/lists.jsx","components/mainStyles.jsx","components/model-table/ModelTable.jsx","components/utils.js","components/constants.js","components/App.jsx","components/home/Home.jsx","components/info/Info.jsx","components/tasks/Task1.jsx","components/tasks/Task2.jsx","components/models/DeleteDialog.jsx","components/formGenerationEngine/utils.js","components/formGenerationEngine/BaseInput.js","components/formGenerationEngine/AutocompleteWidget.js","components/formGenerationEngine/SelectWidget.js","components/formGenerationEngine/CheckboxWidget.js","components/formGenerationEngine/DateWidget.js","components/formGenerationEngine/DateTimeWidget.js","components/formGenerationEngine/NumberWidget.js","components/formGenerationEngine/FieldTemplate.js","components/formGenerationEngine/Form.js","components/formGenerationEngine/RadioWidget.js","components/forms.js","components/models/AddDialog.jsx","components/models/EditDialog.jsx","components/models/Models.jsx","reportWebVitals.js","index.js"],"names":["listGenerator","list","selectedIndex","onItemClicked","map","model","index","selected","undefined","onClick","event","button","primary","nanoid","listObjectGenerator","selectedId","id","data","MainList","history","useHistory","push","AdditionalList","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","spaceDivider","paddingBottom","appBarSpacer","content","height","overflow","container","paddingTop","paper","flexDirection","fixedHeight","BasicModelTable","listOfData","noActions","onDelete","onEdit","columns","utils","options","headerStyle","rowStyle","actions","tooltip","icon","generateColumns","object","Object","keys","filter","k","key","text","charAt","toUpperCase","slice","field","makeFlat","obj","console","log","entries","reduce","acc","curr","makeValuesString","makeDateTimeString","localDateTime","makeDateString","localDate","apiURL","createEntityUrl","entities","apiPath","models","none","defaultAlter","createdAt","modifiedAt","brigade","name","alter","chief","surname","specification","requires","brigadeSpec","building","plot","address","buildingStep","management","contract","customer","constructionManagement","projectFinishedDate","projectStartDate","signedDate","employee","employeeSpec","machinery","machineryStorage","storage","request","nObject","plan","brigadeThatAsked","scheduleEvent","beginning","ending","spending","task_1","first","second","task_2","App","classes","React","useState","open","setOpen","className","clsx","edge","color","aria-label","component","variant","noWrap","exact","path","useHomeStyles","modelListTitle","helloTitle","marginBottom","contentText","btnMargin","margin","numberInPage","paperHeight","Home","mainClasses","numberOfEmployees","setNumberOfEmployees","numberOfManagements","setNumberOfManagements","numberOfContracts","setNumberOfContracts","fetchNumbersData","a","axios","get","then","employeeNumber","managementNumber","contractsInProgress","useEffect","item","xs","align","useinfoStyles","textDecoration","Info","href","underlineNone","useTask1Styles","floatingActionBtn","top","right","bottom","left","visible","visibility","notVisible","someSpacing","marginTop","Task1","loading","setLoading","dataList","setDataList","plotList","setPlotList","setSelectedId","showDrawer","setShowDrawer","constants","r","fetchData","response","handleRefresh","maxWidth","anchor","onClose","_","useTask2Styles","Task2","earnings","earning","DeleteDialog","shown","cancelEvent","applyEvent","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","getError","errors","info","FormHelperText","style","fontSize","BaseInput","props","required","schema","value","onChange","rawErrors","TextField","error","length","disabled","label","target","autoComplete","InputProps","startAdornment","prefix","InputAdornment","endAdornment","suffix","InputLabelProps","type","format","Autocomplete","popperNode","handleStateChange","changes","hasOwnProperty","selectedItem","inputValue","this","suggestionComponent","isItemSelected","suggestion","suggestions","enumOptions","placeholder","Component","SelectWidget","AutocompleteWidget","FormControl","InputLabel","htmlFor","input","MenuProps","o","MenuItem","CheckboxWidget","FormGroup","FormControlLabel","control","checked","DateWidget","FormLabel","MuiPickersUtilsProvider","DateFnsUtils","Date","parse","date","toISOString","DateTimeWidget","Number","parseInt","replace","fillWidth","FieldTemplate","classNames","description","children","widgets","RadioWidget","RadioGroup","row","Radio","datetime","number","NumberWidget","Form","formData","onCancel","onSubmit","uiSchema","liveValidate","Typography","noHtml5Validate","showErrorList","forms","scheme","properties","anyOf","enum","active","widget","failed","finished","price","contactName","contactSurname","contactPhoneNumber","contactEMail","dateOfBirth","email","phoneNumber","salary","hiredDate","firedDate","defaultValue","usage","year","inUsage","satisfied","count","requestDate","satisfiedDate","useFormStyles","formStyles","border","formControl","divider","dummyProps","AddDialog","formIndex","formProps","setFormProps","dependencies","requirements","promises","link","Promise","all","post","EditDialog","itemId","setData","res","catch","err","put","useModelsStyles","Models","setSelectedIndex","showDialog","setShowDialog","showEdit","setShowEdit","showModelDrawer","setShowModelDrawer","showDeleteAlert","setShowDeleteAlert","selectedToDelete","setSelectedToDelete","selectedToEdit","setSelectedToEdit","handleAddDialogClose","e","cancelDeleteAlert","deleteData","delete","values","mounted","ms","resolve","setTimeout","entity","isMounted","Container","Grid","Box","IconButton","LinearProgress","Fab","Drawer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a804a8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const listGenerator = (list, selectedIndex, onItemClicked) => {\r\n    return (\r\n        <div>\r\n            {list.map((model, index) => (\r\n                <ListItem\r\n                    key={nanoid()}\r\n                    selected={\r\n                        selectedIndex !== undefined\r\n                            ? selectedIndex === index\r\n                            : false\r\n                    }\r\n                    onClick={(event) => onItemClicked !== undefined && onItemClicked(event, index)}\r\n                    button\r\n                >\r\n                    <ListItemText primary={model} />\r\n                </ListItem>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const listObjectGenerator = (list, selectedId, onItemClicked) => {\r\n    return (\r\n        <div>\r\n            {list.map((model) => (\r\n                <ListItem\r\n                    key={model.id}\r\n                    selected={\r\n                       model.id === selectedId\r\n                    }\r\n                    onClick={(event) => onItemClicked !== undefined && onItemClicked(event, model.id)}\r\n                    button\r\n                >\r\n                    <ListItemText primary={model.data} />\r\n                </ListItem>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MainList = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <ListItem onClick={() => history.push(\"/\")} button>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem onClick={() => history.push(\"/models\")} button>\r\n                <ListItemIcon>\r\n                    <ClassIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Models\" />\r\n            </ListItem>\r\n            {/* <ListItem onClick={() => history.push(\"/settings\")} button>\r\n                <ListItemIcon>\r\n                    <SettingsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Settings\" />\r\n            </ListItem> */}\r\n            <ListItem onClick={() => history.push(\"/info\")} button>\r\n                <ListItemIcon>\r\n                    <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Info\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const AdditionalList = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <ListItem onClick={() => history.push(\"/task_1\")} button>\r\n                <ListItemIcon>\r\n                    <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Employees from plots\" />\r\n            </ListItem>\r\n            <ListItem onClick={() => history.push(\"/task_2\")} button>\r\n                <ListItemIcon>\r\n                    <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Management income\" />\r\n            </ListItem>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"0 8px\",\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: \"none\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: \"relative\",\r\n        whiteSpace: \"nowrap\",\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: \"hidden\",\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    spaceDivider: {\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport * as utils from \"../utils\";\r\n\r\nexport default function BasicModelTable({\r\n    listOfData,\r\n    title,\r\n    noActions = false,\r\n    onDelete,\r\n    onEdit,\r\n}) {\r\n    return (\r\n        <MaterialTable\r\n            columns={utils.generateColumns(\r\n                listOfData ? listOfData[0] : undefined\r\n            )}\r\n            options={{\r\n                // selection: true,\r\n                headerStyle: {\r\n                    whiteSpace: \"nowrap\",\r\n                },\r\n                rowStyle: {\r\n                    whiteSpace: \"nowrap\",\r\n                },\r\n            }}\r\n            data={listOfData}\r\n            title={title}\r\n            actions={\r\n                !noActions\r\n                    ? [\r\n                          {\r\n                              tooltip: \"Remove All Selected Items\",\r\n                              icon: \"delete\",\r\n                              onClick: onDelete,\r\n                          },\r\n                          {\r\n                              tooltip: \"Edit Selected Item\",\r\n                              icon: \"edit\",\r\n                              onClick: onEdit,\r\n                          },\r\n                      ]\r\n                    : []\r\n            }\r\n        />\r\n    );\r\n}\r\n","export const capitalize = (text) =>\r\n    text.charAt(0).toUpperCase() + text.slice(1);\r\n\r\nexport const generateColumns = (object) => {\r\n    if (object === undefined) return [];\r\n    const keys = Object.keys(object);\r\n    return keys\r\n        .filter((k) => k !== \"tableData\")\r\n        .map((key) => ({ title: capitalize(key), field: key }));\r\n};\r\n\r\nexport const makeFlat = (obj) => {\r\n    console.log(obj);\r\n    return Object.entries(obj).reduce(\r\n        (acc, curr) => {\r\n            if (typeof curr[1] === \"object\" && curr[1] !== null) acc[curr[0]] = curr[1].id;\r\n\r\n            return acc;\r\n        },\r\n        { ...obj }\r\n    );\r\n}\r\n    \r\n\r\nexport const makeValuesString = (obj) =>\r\n    Object.entries(obj).reduce(\r\n        (acc, curr) => {\r\n            if(typeof curr[1] !== 'boolean' && typeof curr[1] !== 'number') acc[curr[0]] = `${curr[1]}`;\r\n            return acc;\r\n        },\r\n        { ...obj }\r\n    );\r\n\r\nexport const makeDateTimeString = (localDateTime) => localDateTime;\r\nexport const makeDateString = (localDate) => localDate;\r\n","import * as utils from './utils';\r\n\r\n\r\n// export const apiURL = \"http://localhost:8080/api/v1\";\r\nexport const apiURL = \"https://buildingo-backend.herokuapp.com/api/v1\";\r\n\r\nexport const mainLocations = [\"Home\", \"...\", \"...\"];\r\n\r\nexport const createEntityUrl = (index) => apiURL + Object.entries(entities)[index][1].apiPath  \r\n\r\nexport const models = [\r\n    \"Brigade\",\r\n    \"Brigade Specification\",\r\n    \"Building\",\r\n    \"Building Steps\",\r\n    \"Construction Management\",\r\n    \"Contract\",\r\n    \"Customer\",\r\n    \"Employee\",\r\n    \"Employee Specification\",\r\n    // \"Estimate\",\r\n    \"Machinery\",\r\n    \"Machinery Storage\",\r\n    \"Plot\",\r\n    \"Request\",\r\n    // \"Schedule\",\r\n    \"Schedule Event\",\r\n    \"Spending\",\r\n];\r\n\r\nconst none = \"Not specified\";\r\n\r\nconst defaultAlter = (object) => ({\r\n    ...object,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterBrigade = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    specification: object.specification?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\nconst alterBuilding = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    plot: object.plot?.address || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterManagement = (object) => ({\r\n    ...object,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterContract = (object) => ({\r\n    ...object,\r\n    customer: object.customer?.name || none,\r\n    plot: object.plot?.address || none,\r\n    constructionManagement: object.constructionManagement?.name || none,\r\n    projectFinishedDate: utils.makeDateString(object.projectFinishedDate),\r\n    projectStartDate: utils.makeDateString(object.projectStartDate),\r\n    signedDate: utils.makeDateString(object.signedDate),\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterEmployee = (object) => ({\r\n    ...object,\r\n    specification: object.specification?.name || none,\r\n    brigade: object.brigade?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterMachinery = (object) => ({\r\n    ...object,\r\n    machineryStorage: object.machineryStorage?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterPlot = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterRequest = (object) => {\r\n    let nObject = ({\r\n        ...object,\r\n        building: object.building?.plan || none,\r\n        brigadeThatAsked: undefined,\r\n        brigade: object.brigadeThatAsked?.name || none,\r\n        constructionManagement: object.constructionManagement?.name || none,\r\n        createdAt: utils.makeDateTimeString(object.createdAt),\r\n        modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n    });\r\n    delete nObject.brigadeThatAsked\r\n    return nObject\r\n} \r\n\r\nconst alterScheduleEvent = (object) => ({\r\n    ...object,\r\n    buildingStep: object.buildingStep?.name || none,\r\n    brigade: object.brigade?.name || none,\r\n    building: object.building === undefined ? none : object.building?.plan,\r\n    beginning: utils.makeDateString(object.beginning),\r\n    ending: utils.makeDateString(object.ending),\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterSpending = (object) => ({\r\n    ...object,\r\n    building: object.building === undefined ? none : object.building?.plot?.address,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterTask1 = (object) => ({\r\n    ...object,\r\n    first: object.first?.address || none,\r\n    second: `${object.second.name} ${object.second.second}`,\r\n})\r\n\r\nexport const entities = {\r\n    brigade: { name: \"Brigade\", apiPath: \"/brigades\", alter: alterBrigade, requires: [\"/employees/names\", \"/brigade-specs/names\"] },\r\n    brigadeSpec: {\r\n        name: \"Brigade Specification\",\r\n        apiPath: \"/brigade-specs\",\r\n        alter: defaultAlter,\r\n        requires: []\r\n    },\r\n    building: { name: \"Building\", apiPath: \"/buildings\", alter: alterBuilding, requires: [\"/plots/addresses\", \"/employees/names\"] },\r\n    buildingStep: { name: \"Building Steps\", apiPath: \"/building-steps\", alter: defaultAlter, requires: [] },\r\n    management: { name: \"Construction Management\", apiPath: \"/managements\", alter: alterManagement, requires: [] },\r\n    contract: { name: \"Contract\", apiPath: \"/contracts\", alter: alterContract, requires: [\"/customers/contacts\", \"/managements/addresses\", \"/plots/addresses\"]},\r\n    customer: { name: \"Customer\", apiPath: \"/customers\", alter: defaultAlter, requires: [] },\r\n    employee: { name: \"Employee\", apiPath: \"/employees\", alter: alterEmployee, requires: [\"/employee-specs/names\", \"/brigades/names\"] },\r\n    employeeSpec: {\r\n        name: \"Employee Specification\",\r\n        apiPath: \"/employee-specs\",\r\n        alter: defaultAlter,\r\n        requires: []\r\n    },\r\n    // estimate: { name: \"Estimate\", apiPath: \"/estimates\", alter: alterEstimate },\r\n    machinery: { name: \"Machinery\", apiPath: \"/machineries\", alter: alterMachinery, requires: [\"/machinery-storages/addresses\"] },\r\n    storage: { name: \"Machinery Storage\", apiPath: \"/machinery-storages\", alter: defaultAlter, requires: [] },\r\n    plot: { name: \"Plot\", apiPath: \"/plots\", alter: alterPlot, requires: [\"/employees/names\"] },\r\n    request: { name: \"Request\", apiPath: \"/requests\", alter: alterRequest, requires: [\"/buildings/addresses\", \"/brigades/names\", \"/managements/addresses\"] },\r\n    // schedule: { name: \"Schedule\", apiPath: \"/schedules\", alter: alterSchedule },\r\n    scheduleEvent: { name: \"Schedule Event\", apiPath: \"/schedule-events\", alter: alterScheduleEvent, requires: [\"/buildings/addresses\", \"/building-steps/names\", \"/brigades/names\"] },\r\n    spending: { name: \"Spending\", apiPath: \"/spendings\", alter: alterSpending, requires: [\"/buildings/addresses\"] },\r\n    task_1: { name: \"Engineers from specified plot\", apiPath: \"/specials/engineers-from-plot\", alter: alterTask1 },\r\n    task_2: { name: \"Engineers from specified plot\", apiPath: \"/specials/managements-earnings\", alter: (object) => object }\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Home from \"./home/Home\";\nimport Info from \"./info/Info\";\nimport Models from \"./models/Models\";\nimport { useStyles } from \"./mainStyles\";\nimport { MainList, AdditionalList } from \"./lists\";\nimport Task1 from './tasks/Task1';\nimport Task2 from './tasks/Task2';\n\nexport default function App() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [collapseOpen, setCollapseOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleCollapseClick = () => {\n        setCollapseOpen(!collapseOpen);\n        setImmediate(!collapseOpen);\n    };\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"absolute\"\n                    className={clsx(\n                        classes.appBar,\n                        open && classes.appBarShift\n                    )}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            className={clsx(\n                                classes.menuButton,\n                                open && classes.menuButtonHidden\n                            )}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Building Organization Application\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                {/* Drawer */}\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(\n                            classes.drawerPaper,\n                            !open && classes.drawerPaperClose\n                        ),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <MainList />\n                    <Divider />\n                    <AdditionalList />\n                </Drawer>\n\n                {/* Main Content */}\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <div className={classes.spaceDivider} />\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/models\">\n                            <Models />\n                        </Route>\n                        <Route path=\"/settings\">\n                            <Typography>Settings</Typography>\n                        </Route>\n                        <Route path=\"/info\">\n                            <Info />\n                        </Route>\n                        <Route path=\"/task_1\">\n                            <Task1 />\n                        </Route>\n                        <Route path=\"/task_2\">\n                            <Task2 />\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </Router>\n    );\n}\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {\r\n    createMuiTheme,\r\n    withStyles,\r\n    makeStyles,\r\n    ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"../mainStyles\";\r\nimport axios from \"axios\";\r\nimport { apiURL } from \"../constants\";\r\n\r\nconst useHomeStyles = makeStyles((theme) => ({\r\n    title: {},\r\n    modelListTitle: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    helloTitle: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    contentText: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    btnMargin: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    numberInPage: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    paperHeight: {\r\n        height: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default function Home() {\r\n    const mainClasses = useStyles();\r\n    const classes = useHomeStyles();\r\n\r\n    const [numberOfEmployees, setNumberOfEmployees] = React.useState(0);\r\n    const [numberOfManagements, setNumberOfManagements] = React.useState(0);\r\n    const [numberOfContracts, setNumberOfContracts] = React.useState(0);\r\n\r\n    const fetchNumbersData = async () => {\r\n        await axios.get(`${apiURL}/specials/main-numbers`).then(({ data }) => {\r\n            setNumberOfEmployees(data.employeeNumber);\r\n            setNumberOfManagements(data.managementNumber);\r\n            setNumberOfContracts(data.contractsInProgress);\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchNumbersData();\r\n    }, [numberOfEmployees, numberOfManagements, numberOfContracts]);\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\" className={classes.helloTitle}>\r\n                Hello!\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfEmployees}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Employees\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfManagements}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Managements\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfContracts}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Contracts in Progress\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useinfoStyles = makeStyles((theme) => ({\r\n    title: {},\r\n    modelListTitle: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    helloTitle: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    contentText: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    btnMargin: {\r\n        textDecoration: 'none',\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Info() {\r\n    const classes = useinfoStyles();\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\" className={classes.helloTitle}>\r\n                Hello!\r\n            </Typography>\r\n\r\n            <Typography>\r\n                This is an application for building organization. This project\r\n                is powered with Spring Boot and React.\r\n            </Typography>\r\n            <Link href=\"https://github.com/OnufreiArtem\" underlineNone>\r\n                <Button\r\n                    className={classes.btnMargin}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    See my GitHub\r\n                </Button>\r\n            </Link>\r\n            <Link href=\"https://buildingo-backend.herokuapp.com/swagger-ui.html\" underlineNone>\r\n                <Button\r\n                    className={classes.btnMargin}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    See Swagger\r\n                </Button>\r\n            </Link>\r\n\r\n            <Typography>Developed by Artem Onufrei</Typography>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    Button,\r\n    LinearProgress,\r\n    Drawer,\r\n} from \"@material-ui/core\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BasicModelTable from \"../model-table/ModelTable\";\r\nimport * as constants from \"../constants\";\r\nimport { listObjectGenerator } from \"../lists\";\r\nimport axios from \"axios\";\r\n\r\nconst useTask1Styles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    floatingActionBtn: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 50,\r\n        bottom: 50,\r\n        left: \"auto\",\r\n        position: \"fixed\",\r\n    },\r\n    visible: {\r\n        visibility: \"visible\",\r\n    },\r\n    notVisible: {\r\n        visibility: \"hidden\",\r\n    },\r\n    someSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Task1() {\r\n    const classes = useTask1Styles();\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [dataList, setDataList] = React.useState([]);\r\n    const [plotList, setPlotList] = React.useState([]);\r\n    const [selectedId, setSelectedId] = React.useState(undefined);\r\n    const [showDrawer, setShowDrawer] = React.useState(false);\r\n\r\n    const fetchPlotList = () => {\r\n        axios\r\n            .get(constants.apiURL + constants.entities.plot.apiPath + \"/\")\r\n            .then((r) =>\r\n                setPlotList(\r\n                    r.data.map((item) => ({ id: item.id, data: item.address }))\r\n                )\r\n            );\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetchPlotList();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setSelectedId(plotList[0]?.id || undefined);\r\n    }, [plotList]);\r\n\r\n    React.useEffect(() => {\r\n        if (selectedId !== undefined) {\r\n            fetchData();\r\n        }\r\n    }, [selectedId]);\r\n\r\n    const fetchData = () => {\r\n        setLoading(true);\r\n        if (selectedId !== undefined) {\r\n            axios\r\n                .get(\r\n                    constants.apiURL +\r\n                        constants.entities.task_1.apiPath +\r\n                        `/${selectedId}`\r\n                )\r\n                .then((response) => {\r\n                    setDataList(response.data);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleRefresh = async () => {\r\n        fetchData();\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography\r\n                            className={classes.someSpacing}\r\n                            variant=\"h4\"\r\n                            component=\"h4\"\r\n                        >\r\n               \r\n                        </Typography>\r\n                        <Box>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setShowDrawer(true);\r\n                                }}\r\n                            >\r\n                                Select Plot\r\n                            </Button>\r\n\r\n                            <IconButton\r\n                                aria-label=\"refresh\"\r\n                                className={classes.someSpacing}\r\n                                onClick={handleRefresh}\r\n                            >\r\n                                <UpdateIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <LinearProgress\r\n                        className={\r\n                            loading ? classes.visible : classes.notVisible\r\n                        }\r\n                    />\r\n                    <BasicModelTable\r\n                        listOfData={dataList.map(item => ({id: item.id, name: item.name + \" \" + item.surname, specification: item.specification?.name}))}\r\n                        noActions={true}\r\n                        title=\"Employees from plot\"\r\n                    />\r\n\r\n                    <Drawer\r\n                        anchor={\"right\"}\r\n                        open={showDrawer}\r\n                        onClose={() => setShowDrawer(false)}\r\n                    >\r\n                        {listObjectGenerator(plotList, selectedId, (_, id) => {\r\n                            setSelectedId(id);\r\n                        })}\r\n                    </Drawer>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    Button,\r\n    LinearProgress,\r\n    Drawer,\r\n} from \"@material-ui/core\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BasicModelTable from \"../model-table/ModelTable\";\r\nimport * as constants from \"../constants\";\r\nimport { listObjectGenerator } from \"../lists\";\r\nimport axios from \"axios\";\r\n\r\nconst useTask2Styles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    floatingActionBtn: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 50,\r\n        bottom: 50,\r\n        left: \"auto\",\r\n        position: \"fixed\",\r\n    },\r\n    visible: {\r\n        visibility: \"visible\",\r\n    },\r\n    notVisible: {\r\n        visibility: \"hidden\",\r\n    },\r\n    someSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Task2() {\r\n    const classes = useTask2Styles();\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [dataList, setDataList] = React.useState([]);\r\n\r\n    const fetchData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get(constants.apiURL + constants.entities.task_2.apiPath + '/')\r\n            .then((response) => {\r\n                setDataList(response.data);\r\n                setLoading(false);\r\n            });\r\n    };\r\n    \r\n    const handleRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    React.useEffect(handleRefresh, []);\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography\r\n                            className={classes.someSpacing}\r\n                            variant=\"h4\"\r\n                            component=\"h4\"\r\n                        >\r\n                        </Typography>\r\n                        <Box>\r\n                            <IconButton\r\n                                aria-label=\"refresh\"\r\n                                className={classes.someSpacing}\r\n                                onClick={handleRefresh}\r\n                            >\r\n                                <UpdateIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <LinearProgress\r\n                        className={\r\n                            loading ? classes.visible : classes.notVisible\r\n                        }\r\n                    />\r\n                    <BasicModelTable\r\n                        listOfData={dataList.map((item) => ({\r\n                            id: item.management.id,\r\n                            name: item.management.name,\r\n                            address: item.management.address,\r\n                            earnings: item.earning,\r\n                        }))}\r\n                        noActions={true}\r\n                        title=\"The income from managements\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function DeleteDialog({ shown, cancelEvent, applyEvent }) {\r\n    return (\r\n        <Dialog\r\n            open={shown}\r\n            onClose={cancelEvent}\r\n            aria-labelledby=\"form-delete-item\"\r\n        >\r\n            <DialogTitle id=\"form-delete-item\">Delete selection</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure, you want to delete this item?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={cancelEvent} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={applyEvent} color=\"primary\">\r\n                    Yes, Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { FormHelperText } from \"@material-ui/core\";\n\nexport const getError = errors => {\n  if (errors) {\n    return errors.map(info => (\n      <FormHelperText\n        style={{ color: \"red\", fontSize: 12, marginTop: 0, marginBottom: 8 }}\n        key={info}\n      >\n        {info}\n      </FormHelperText>\n    ))[0];\n  }\n  return null;\n};\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst BaseInput = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(value);\n  return (\n    <div>\n      <TextField\n        id={id}\n        error={!!(rawErrors && rawErrors.length)}\n        disabled={schema.disabled}\n        label={schema.title}\n        // to add a \"*\" in the label\n        required={required}\n        // null makes the component uncontrolled\n        value={value || \"\"}\n        // avoid the case of empty string considered as a value\n        // and not trigerring required validation\n        onChange={event => onChange(event.target.value || null)}\n        autoComplete={false}\n        InputProps={{\n          style: { fontSize: 18 },\n          startAdornment: schema.prefix ? (\n            <InputAdornment position=\"start\" style={{ fontSize: 22 }}>\n              {schema.prefix}\n            </InputAdornment>\n          ) : null,\n          endAdornment: schema.suffix ? (\n            <InputAdornment position=\"end\" style={{ fontSize: 22 }}>\n              {schema.suffix}\n            </InputAdornment>\n          ) : null\n        }}\n        InputLabelProps={{ style: { fontSize: 18 } }}\n        style={{ width: \"100%\", margin: 0, marginBottom: 20 }}\n        type={schema.format}\n      />\n      {getError(rawErrors)}\n    </div>\n  );\n};\n\nexport default BaseInput;\n","import React, { Component } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  Paper,\n  Popper,\n  TextField,\n  MenuItem,\n  FormHelperText\n} from \"@material-ui/core\";\n\nclass Autocomplete extends Component {\n  popperNode = null;\n  handleStateChange = changes => {\n    const { onChange } = this.props;\n    if (changes.hasOwnProperty(\"selectedItem\")) {\n      onChange(changes.selectedItem.value);\n    } else if (changes.hasOwnProperty(\"inputValue\")) {\n      onChange(changes.inputValue);\n    }\n  };\n  getError = errors => {\n    if (errors) {\n      return errors.map(info => (\n        <FormHelperText style={{ color: \"red\", fontSize: 12 }} key={info}>\n          {info}\n        </FormHelperText>\n      ));\n    }\n    return null;\n  };\n  // itemToString = item => (item ? item.label : \"\");\n  render() {\n    // const { id, required, schema, value, onChange, rawErrors, options } = props;\n    const {\n      id,\n      required,\n      schema,\n      value,\n      rawErrors,\n      options,\n      suggestionComponent = item => <span>{item.label}</span>,\n      isItemSelected = (selectedItem, suggestion) => {\n        if (typeof selectedItem === \"object\") {\n          return selectedItem.value === suggestion.value;\n        } else {\n          return selectedItem === suggestion.value;\n        }\n      }\n    } = this.props;\n    const suggestions = options.enumOptions;\n    const placeholder = `${schema.title}${required ? \"*\" : \"\"}`;\n    console.log(this.props);\n    console.log(suggestions, placeholder, isItemSelected, suggestionComponent);\n    return (\n      // <div>\n      //   <Downshift\n      //     selectedItem={value}\n      //     onStateChange={this.handleStateChange}\n      //     // itemToString={this.itemToString}\n      //   >\n      //     {({\n      //       getLabelProps,\n      //       getInputProps,\n      //       getItemProps,\n      //       getMenuProps,\n      //       highlightedIndex,\n      //       // inputValue,\n      //       isOpen,\n      //       selectedItem\n      //     }) => (\n      //       <div>\n      //         {/* For accessibility */}\n      //         <label {...getLabelProps({ style: { display: \"none\" } })}>\n      //           {placeholder}\n      //         </label>\n      //         {renderInput({\n      //           fullWidth: true,\n      //           InputProps: getInputProps({\n      //             placeholder,\n      //             id\n      //           }),\n      //           ref: node => {\n      //             this.popperNode = node;\n      //           },\n      //           autoComplete: \"nope\"\n      //         })}\n      //         <Popper open={isOpen} anchorEl={this.popperNode}>\n      //           <div\n      //             {...(isOpen\n      //               ? getMenuProps({}, { suppressRefError: true })\n      //               : {})}\n      //           >\n      //             <Paper\n      //               square\n      //               style={{\n      //                 marginTop: 8,\n      //                 width: this.popperNode\n      //                   ? this.popperNode.clientWidth\n      //                   : null\n      //               }}\n      //             >\n      //               {suggestions &&\n      //                 suggestions.map((suggestion, index) =>\n      //                   renderSuggestion({\n      //                     suggestion,\n      //                     index,\n      //                     itemProps: getItemProps({ item: suggestion }),\n      //                     highlightedIndex,\n      //                     selectedItem,\n      //                     suggestionComponent,\n      //                     isItemSelected\n      //                   })\n      //                 )}\n      //             </Paper>\n      //           </div>\n      //         </Popper>\n      //       </div>\n      //     )}\n      //   </Downshift>\n      //   {this.getError(rawErrors)}\n      // </div>\n      null\n    );\n  }\n}\n\nexport default Autocomplete;\n\nfunction renderInput(inputProps) {\n  const { InputProps, ref, style = {}, ...other } = inputProps;\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        ...InputProps,\n        style: {\n          fontSize: 14,\n          ...style\n        }\n      }}\n      {...other}\n    />\n  );\n}\nfunction renderSuggestion({\n  suggestion,\n  index,\n  itemProps,\n  highlightedIndex,\n  selectedItem,\n  suggestionComponent,\n  isItemSelected\n}) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = isItemSelected(selectedItem, suggestion); // (selectedItem || \"\").indexOf(suggestion.label) > -1;\n  const SuggestionComponent = suggestionComponent;\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400\n      }}\n    >\n      <SuggestionComponent suggestion={suggestion} />\n    </MenuItem>\n  );\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select as MSelect,\n  MenuItem,\n  Input as MInput\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\nimport MultiSelectWidget from \"./MultiSelectWidget\";\nimport AutocompleteWidget from \"./AutocompleteWidget\";\n\n// TODO: We can even add start and end adornments in the second phase\nconst SelectWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors, options } = props;\n\n  if (schema.type === \"array\") {\n    // return <MultiSelectWidget {...props} />;\n    return <AutocompleteWidget {...props} />;\n  }\n\n  return (\n    <FormControl\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\" }}\n    >\n      <InputLabel style={{ fontSize: 18 }} htmlFor={`${schema.title}-helper`}>\n        {schema.title}\n      </InputLabel>\n      <MSelect\n        id={id}\n        style={{ fontSize: 18, marginBottom: 20, width: 450 }}\n        value={value || \"\"}\n        onChange={event => onChange(event.target.value)}\n        name={schema.title}\n        input={<MInput name={schema.title} id={`${schema.title}-helper`} />}\n        MenuProps={{\n          style: {\n            fontSize: 18\n          }\n        }}\n      >\n        {options &&\n          options.enumOptions.map(o => (\n            <MenuItem\n              key={o.value}\n              value={o.value}\n              style={{\n                fontSize: 18,\n                padding: \"4px 16px\"\n              }}\n            >\n              {o.label}\n            </MenuItem>\n          ))}\n      </MSelect>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox as MCheckbox\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst CheckboxWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(\"c\", value);\n  return (\n    <FormControl\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\" }}\n    >\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <MCheckbox\n              id={id}\n              name={id}\n              checked={!!value}\n              onChange={event => onChange(event.target.checked)}\n              value={schema.title}\n            />\n          }\n          label={schema.title}\n        />\n      </FormGroup>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n} from \"@material-ui/core\";\r\nimport 'date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getError } from \"./utils\";\r\n\r\nconst DateWidget = (props) => {\r\n    const { id, required, schema, value, onChange, rawErrors } = props;\r\n    return (\r\n        <FormControl\r\n            component=\"fieldset\"\r\n            disabled={schema.disabled}\r\n            required={required}\r\n            error={!!(rawErrors && rawErrors.length)}\r\n            style={{ width: \"100%\", marginTop: 18 }}\r\n        >\r\n            <FormLabel style={{ fontSize: 18 }} component=\"legend\">\r\n                {schema.title}\r\n            </FormLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    id={id}\r\n                    aria-label={schema.title}\r\n                    name={schema.title}\r\n                    variant=\"inline\"\r\n                    format=\"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    value={Date.parse(value || \" \")}\r\n                    onChange={(date) => {console.log(date !== null ? date.toISOString().slice(0, 10) : null); onChange(date !== null ? date.toISOString().slice(0, 10) : null)}}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {getError(rawErrors) && getError(rawErrors)[0]}\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default DateWidget;\r\n","import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Radio,\r\n} from \"@material-ui/core\";\r\nimport 'date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getError } from \"./utils\";\r\n\r\nconst DateTimeWidget = (props) => {\r\n    const { id, required, schema, value, onChange, rawErrors } = props;\r\n    return (\r\n        <FormControl\r\n            component=\"fieldset\"\r\n            disabled={schema.disabled}\r\n            required={required}\r\n            error={!!(rawErrors && rawErrors.length)}\r\n            style={{ width: \"100%\", marginTop: 18 }}\r\n        >\r\n            <FormLabel style={{ fontSize: 18 }} component=\"legend\">\r\n                {schema.title}\r\n            </FormLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    id={id}\r\n                    aria-label={schema.title}\r\n                    name={schema.title}\r\n                    variant=\"inline\"\r\n                    margin=\"normal\"\r\n                    value={Date.parse(value)}\r\n                    onChange={(date) => onChange(date.toISOString())}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {getError(rawErrors) && getError(rawErrors)[0]}\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default DateTimeWidget;\r\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst BaseInput = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(value);\n  return (\n    <div>\n      <TextField\n        id={id}\n        error={!!(rawErrors && rawErrors.length)}\n        disabled={schema.disabled}\n        label={schema.title}\n        // to add a \"*\" in the label\n        required={required}\n        // null makes the component uncontrolled\n        value={value || 0}\n        // avoid the case of empty string considered as a value\n        // and not trigerring required validation\n        onChange={event => onChange(Number.parseInt(event.target.value.replace(\"/[^d]/\", \"\")) || null)}\n        fillWidth\n        autoComplete=\"nope\"\n        InputProps={{\n          style: { fontSize: 18 },\n          startAdornment: schema.prefix ? (\n            <InputAdornment position=\"start\" style={{ fontSize: 18 }}>\n              {schema.prefix}\n            </InputAdornment>\n          ) : null,\n          endAdornment: schema.suffix ? (\n            <InputAdornment position=\"end\" style={{ fontSize: 18 }}>\n              {schema.suffix}\n            </InputAdornment>\n          ) : null\n        }}\n        InputLabelProps={{ style: { fontSize: 18 } }}\n        style={{ width: \"100%\", margin: 0, marginBottom: 20 }}\n        type={schema.format}\n      />\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </div>\n  );\n};\n\nexport default BaseInput;\n","import React from \"react\";\n\nfunction FieldTemplate(props) {\n  const { classNames, description, children } = props;\n  return (\n    <div className={classNames}>\n      {description}\n      {children}\n    </div>\n  );\n}\n\nexport default FieldTemplate;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport MForm from \"react-jsonschema-form\";\nimport BaseInput from \"./BaseInput\";\nimport SelectWidget from \"./SelectWidget\";\nimport CheckboxWidget from \"./CheckboxWidget\";\nimport DateWidget from \"./DateWidget\";\nimport DateTimeWidget from \"./DateTimeWidget\";\nimport NumberWidget from \"./NumberWidget\";\nimport FieldTemplate from \"./FieldTemplate\";\nimport RadioWidget from \"./RadioWidget\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst widgets = {\n    BaseInput,\n    SelectWidget,\n    CheckboxWidget,\n    RadioWidget,\n    DateWidget,\n    datetime: DateTimeWidget,\n    number: NumberWidget,\n};\n\nconst Form = ({\n    title,\n    formData={},\n    onCancel,\n    onSubmit,\n    uiSchema = {},\n    schema,\n    liveValidate = true,\n}) => {\n    return (\n        <div style={{  }}>\n            <DialogTitle><Typography variant=\"h4\" component=\"h5\" align=\"center\">{title}</Typography></DialogTitle>\n            <DialogContent>\n                <MForm\n                    formData={formData}\n                    style={{width: 500, padding: 10,}}\n                    noHtml5Validate\n                    FieldTemplate={FieldTemplate}\n                    schema={schema}\n                    uiSchema={uiSchema}\n                    widgets={widgets}\n                    showErrorList={false}\n                    liveValidate={liveValidate}\n                    onSubmit={onSubmit}\n                >\n                    <DialogActions>\n                        <Button\n                            onClick={onCancel}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </MForm>\n            </DialogContent>\n        </div>\n    );\n};\n\nexport default Form;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst RadioWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors, options } = props;\n  return (\n    <FormControl\n      component=\"fieldset\"\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\", marginTop: 22 }}\n    >\n      <FormLabel style={{ fontSize: 22 }} component=\"legend\">\n        {schema.title}\n      </FormLabel>\n      <RadioGroup\n        id={id}\n        aria-label={schema.title}\n        name={schema.title}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        row\n      >\n        {options &&\n          options.enumOptions.map(o => (\n            <FormControlLabel\n              key={o.value}\n              value={o.value}\n              control={<Radio />}\n              label={o.label}\n              disabled={o.disabled}\n            />\n          ))}\n      </RadioGroup>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default RadioWidget;\n","export const forms = [\r\n    /* Brigade */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"specification\", \"chief\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Brigade name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                specification: {\r\n                    type: \"string\",\r\n                    title: \"Specification\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Brigade Specification */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Building */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"chief\", \"plan\", \"plot\"],\r\n            properties: {\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                plan: {\r\n                    type: \"string\",\r\n                    title: \"Plan\",\r\n                },\r\n                plot: {\r\n                    type: \"string\",\r\n                    title: \"Plot\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Building Step */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Construction Management */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"address\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Contract */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"constructionManagement\",\r\n                \"plot\",\r\n                \"customer\",\r\n                \"price\",\r\n                \"signedDate\",\r\n            ],\r\n            properties: {\r\n                constructionManagement: {\r\n                    type: \"string\",\r\n                    title: \"Management\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                plot: {\r\n                    type: \"string\",\r\n                    title: \"Plot\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                customer: {\r\n                    type: \"string\",\r\n                    title: \"Customer\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                failed: {\r\n                    type: \"boolean\",\r\n                    title: \"Failed\",\r\n                },\r\n                finished: {\r\n                    type: \"boolean\",\r\n                    title: \"Finished\",\r\n                },\r\n                price: {\r\n                    type: \"number\",\r\n                    title: \"Price\",\r\n                },\r\n                signedDate: {\r\n                    type: \"string\",\r\n                    title: \"Signed date\",\r\n                    format: \"date\",\r\n                },\r\n                projectStartDate: {\r\n                    type: \"string\",\r\n                    title: \"Start date\",\r\n                },\r\n                projectFinishedDate: {\r\n                    type: \"string\",\r\n                    title: \"Finish date\",\r\n                    format: \"date\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            price: {\r\n                \"ui:widget\": \"number\"\r\n            },\r\n            projectStartDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            projectFinishedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            signedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Customer */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"type\",\r\n                \"contactName\",\r\n                \"contactSurname\",\r\n                \"contactEMail\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Person\",\r\n                            enum: [\"PERSON\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Organization\",\r\n                            enum: [\"ORGANIZATION\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Company\",\r\n                            enum: [\"COMPANY\"],\r\n                        },\r\n                    ],\r\n                },\r\n                contactName: {\r\n                    type: \"string\",\r\n                    title: \"Contact Name\",\r\n                },\r\n                contactSurname: {\r\n                    type: \"string\",\r\n                    title: \"Contact Surname\",\r\n                },\r\n                contactPhoneNumber: {\r\n                    type: \"string\",\r\n                    title: \"Contact Phone Number\",\r\n                },\r\n                contactEMail: {\r\n                    type: \"string\",\r\n                    title: \"Contact Email\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Employee */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"surname\",\r\n                \"specification\",\r\n                \"dateOfBirth\",\r\n                \"email\",\r\n                \"salary\",\r\n                \"hiredDate\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                surname: {\r\n                    type: \"string\",\r\n                    title: \"Surname\",\r\n                },\r\n                specification: {\r\n                    type: \"string\",\r\n                    title: \"Specification\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                dateOfBirth: {\r\n                    type: \"string\",\r\n                    title: \"Date Of Birth\",\r\n                    format: \"date\",\r\n                },\r\n                brigade: {\r\n                    type: \"string\",\r\n                    title: \"Brigade\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                email: {\r\n                    type: \"string\",\r\n                    title: \"Email\",\r\n                },\r\n                phoneNumber: {\r\n                    type: \"string\",\r\n                    title: \"Phone Number\",\r\n                },\r\n                salary: {\r\n                    type: \"number\",\r\n                    title: \"Salary\",\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n                hiredDate: {\r\n                    type: \"string\",\r\n                    title: \"HiredDate\",\r\n                },\r\n                firedDate: {\r\n                    type: \"string\",\r\n                    title: \"FiredDate\",\r\n                    defaultValue: \"\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            salary: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            dateOfBirth: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            hiredDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            firedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Employee Specification */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"description\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Person\",\r\n                            enum: [\"ENGINEER\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Organization\",\r\n                            enum: [\"GENERAL\"],\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Machinery */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"number\", \"model\", \"usage\", \"year\", \"machineryStorage\"],\r\n            properties: {\r\n                number: {\r\n                    type: \"string\",\r\n                    title: \"Number\",\r\n                },\r\n                model: {\r\n                    type: \"string\",\r\n                    title: \"Model\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                usage: {\r\n                    type: \"string\",\r\n                    title: \"Usage\",\r\n                },\r\n                year: {\r\n                    type: \"string\",\r\n                    title: \"Year\",\r\n                },\r\n                inUsage: {\r\n                    type: \"boolean\",\r\n                    title: \"In Usage\",\r\n                },\r\n                machineryStorage: {\r\n                    type: \"string\",\r\n                    title: \"MachineryStorage\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Machinery Storage */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"address\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n        widget: {},\r\n    },\r\n    /* Plot */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"address\"],\r\n            properties: {\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n        widget: {},\r\n    },\r\n    /* Request */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"title\",\r\n                \"type\",\r\n                \"building\",\r\n                \"constructionManagement\",\r\n                \"date\",\r\n                \"brigadeThatAsked\",\r\n            ],\r\n            properties: {\r\n                title: {\r\n                    type: \"string\",\r\n                    title: \"Title\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Resource\",\r\n                            enum: [\"RESOURCE\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Machinery\",\r\n                            enum: [\"MACHINERY\"],\r\n                        },\r\n                    ],\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Buildinge\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                constructionManagement: {\r\n                    type: \"string\",\r\n                    title: \"Construction Management\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                date: {\r\n                    type: \"string\",\r\n                    title: \"Date\",\r\n                    format: \"date\",\r\n                },\r\n                satisfied: {\r\n                    type: \"boolean\",\r\n                    title: \"Satisfied\",\r\n                },\r\n                brigadeThatAsked: {\r\n                    type: \"string\",\r\n                    title: \"Brigade That Asked\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            date: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Schedule Event */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"description\",\r\n                \"building\",\r\n                \"brigade\",\r\n                \"buildingStep\",\r\n                \"beginning\",\r\n                \"ending\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Building\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                brigade: {\r\n                    type: \"string\",\r\n                    title: \"Brigade\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                buildingStep: {\r\n                    type: \"string\",\r\n                    title: \"Building Step\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                beginning: {\r\n                    type: \"string\",\r\n                    title: \"Beginning\",\r\n                },\r\n                ending: {\r\n                    type: \"string\",\r\n                    title: \"Ending\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            beginning: {\r\n                \"ui:widget\": \"datetime\",\r\n            },\r\n            ending: {\r\n                \"ui:widget\": \"datetime\",\r\n            },\r\n        },\r\n    },\r\n    /* Spending */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"price\", \"count\", \"building\", \"requestDate\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                price: {\r\n                    type: \"number\",\r\n                    title: \"Price\",\r\n                },\r\n                count: {\r\n                    type: \"number\",\r\n                    title: \"Count\",\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Building\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                requestDate: {\r\n                    type: \"string\",\r\n                    title: \"Request Date\",\r\n                    format: \"date\",\r\n                },\r\n                satisfiedDate: {\r\n                    type: \"string\",\r\n                    title: \"Satisfied Date\",\r\n                    format: \"date\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            count: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            price: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            requestDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            satisfiedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n];\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Form from \"../formGenerationEngine\";\r\nimport * as constants from \"../constants\";\r\nimport { forms } from \"../forms\";\r\nimport axios from \"axios\";\r\n\r\nconst useFormStyles = makeStyles((theme) => ({\r\n    formStyles: {\r\n        padding: theme.spacing(5),\r\n        border: \"none\",\r\n    },\r\n    formControl: {\r\n        width: \"300px\",\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst dummyProps = [\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n]\r\n\r\nexport default function AddDialog({\r\n    shown,\r\n    cancelEvent,\r\n    applyEvent,\r\n    formIndex,\r\n}) {\r\n    const classes = useFormStyles();\r\n    const [formProps, setFormProps] = React.useState(dummyProps) \r\n\r\n    const onSubmit = ({ formData }) => {\r\n        axios.post(constants.createEntityUrl(formIndex) + '/', formData);\r\n        applyEvent();\r\n    };\r\n\r\n    const refreshDependencies = () => {\r\n        dependencies(Object.entries(constants.entities)[formIndex][1].requires)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(shown) {\r\n            refreshDependencies();\r\n        }\r\n    }, [shown])\r\n\r\n    const dependencies = (requirements) => {\r\n        const promises = requirements.map(link => axios.get(constants.apiURL + link));\r\n        Promise.all(promises).then(response => {console.log(response); setFormProps(response.map(r => r.data))});\r\n    }\r\n\r\n    return (\r\n        <Dialog open={shown} aria-labelledby=\"form-add-item\">\r\n            \r\n            <Form\r\n                title={`Add ${\r\n                    Object.entries(constants.entities)[formIndex][1].name\r\n                }`}\r\n                onCancel={cancelEvent}\r\n                className={classes.formStyles}\r\n                schema={formProps.length !== Object.entries(constants.entities)[formIndex][1].requires.length ? forms[formIndex].scheme(dummyProps) : forms[formIndex].scheme(formProps)}\r\n                onSubmit={onSubmit}\r\n                uiSchema={forms[formIndex].widget}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n/*\r\n{formIndex !== undefined ? (\r\n    <Form\r\n    title={`Add ${\r\n        Object.entries(constants.entities)[formIndex].name\r\n    }`}\r\n    onCancel={cancelEvent}\r\n    className={classes.formStyles}\r\n    schema={forms[formIndex].schema(\r\n        Object.entries(constants.entities)[\r\n            formIndex\r\n        ][1].requires.map((path) => {\r\n            let value = [];\r\n            (async () => {\r\n                const r = await axios.get(constants.apiURL + path)\r\n                value = r.data\r\n            })();\r\n            return value;\r\n        })\r\n    )}\r\n    onSubmit={onSubmit}\r\n    uiSchema={forms[formIndex].widget}\r\n/>\r\n) : <span>Error creating add dialog</span>} \r\n*/\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Form from \"../formGenerationEngine\";\r\nimport * as constants from \"../constants\";\r\nimport { forms } from \"../forms\";\r\nimport * as utils from \"../utils\"\r\nimport axios from \"axios\";\r\n\r\nconst useFormStyles = makeStyles((theme) => ({\r\n    formStyles: {\r\n        padding: theme.spacing(5),\r\n        border: \"none\",\r\n    },\r\n    formControl: {\r\n        width: \"300px\",\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst dummyProps = [\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n];\r\n\r\nexport default function EditDialog({\r\n    shown,\r\n    cancelEvent,\r\n    applyEvent,\r\n    formIndex,\r\n    itemId,\r\n}) {\r\n    const classes = useFormStyles();\r\n    const [formProps, setFormProps] = React.useState(dummyProps);\r\n    const [data, setData] = React.useState({});\r\n\r\n    const onSubmit = ({ formData }) => {\r\n        axios.put(constants.createEntityUrl(formIndex) + \"/\", {...data, ...formData});\r\n        applyEvent();\r\n    };\r\n\r\n    const refreshDependencies = () => {\r\n        dependencies(Object.entries(constants.entities)[formIndex][1].requires);\r\n    };\r\n\r\n    const fetchItemFromServer = () => {\r\n        axios\r\n            .get(\r\n                `${constants.apiURL}${\r\n                    Object.entries(constants.entities)[formIndex][1].apiPath\r\n                }/${itemId}`\r\n            )\r\n            .then((res) => {\r\n                setData(utils.makeValuesString(utils.makeFlat(res.data)));\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (shown) {\r\n            refreshDependencies();\r\n            fetchItemFromServer();\r\n        }\r\n    }, [shown]);\r\n\r\n    const dependencies = (requirements) => {\r\n        const promises = requirements.map((link) =>\r\n            axios.get(constants.apiURL + link)\r\n        );\r\n        Promise.all(promises).then((response) => {\r\n            console.log(response);\r\n            setFormProps(response.map((r) => r.data));\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Dialog open={shown} aria-labelledby=\"form-add-item\">\r\n            <Form\r\n                title={`Edit ${\r\n                    Object.entries(constants.entities)[formIndex][1].name\r\n                }`}\r\n                formData={data}\r\n                onCancel={cancelEvent}\r\n                className={classes.formStyles}\r\n                schema={\r\n                    formProps.length !==\r\n                    Object.entries(constants.entities)[formIndex][1].requires\r\n                        .length\r\n                        ? forms[formIndex].scheme(dummyProps)\r\n                        : forms[formIndex].scheme(formProps)\r\n                }\r\n                onSubmit={onSubmit}\r\n                uiSchema={forms[formIndex].widget}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"../mainStyles\";\r\nimport { listGenerator } from \"../lists\";\r\nimport * as constants from \"../constants\";\r\nimport BasicModelTable from \"../model-table/ModelTable\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport axios from \"axios\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { forms } from \"../forms\";\r\nimport EditDialog from \"./EditDialog\";\r\n\r\nconst useModelsStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    floatingActionBtn: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 50,\r\n        bottom: 50,\r\n        left: \"auto\",\r\n        position: \"fixed\",\r\n    },\r\n    visible: {\r\n        visibility: \"visible\",\r\n    },\r\n    notVisible: {\r\n        visibility: \"hidden\",\r\n    },\r\n    someSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Models() {\r\n    const mainClasses = useStyles();\r\n    const classes = useModelsStyles();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [showEdit, setShowEdit] = React.useState(false);\r\n    const [showModelDrawer, setShowModelDrawer] = React.useState(false);\r\n    const [dataList, setDataList] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = React.useState(false);\r\n    const [selectedToDelete, setSelectedToDelete] = React.useState(undefined);\r\n    const [selectedToEdit, setSelectedToEdit] = React.useState(undefined);\r\n\r\n    const handleAddDialogOpen = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const handleAddDialogClose = () => {\r\n        setShowDialog(false);\r\n    };\r\n\r\n    const handleCancelEditDialog = () => {\r\n        setShowEdit(false);\r\n        setSelectedToEdit(undefined);\r\n    }\r\n\r\n    const handleApplyEditDialog = () => {\r\n        setShowEdit(false);\r\n        setSelectedToEdit(undefined);\r\n        handleRefresh();\r\n    }\r\n\r\n    const handleDelete = (env, data) => {\r\n        deleteData(data.id);\r\n        handleRefresh();\r\n    };\r\n\r\n    const handleRefresh = (e) => {\r\n        setLoading(true);\r\n        fetchData(true);\r\n    };\r\n\r\n    const cancelDeleteAlert = () => {\r\n        setShowDeleteAlert(false);\r\n        setSelectedToDelete(undefined);\r\n    };\r\n\r\n    const indeedDeleteAlert = () => {\r\n        handleDelete(undefined, selectedToDelete);\r\n        cancelDeleteAlert();\r\n    };\r\n\r\n    const deleteData = async (id) => {\r\n        await axios\r\n            .delete(\r\n                `${constants.apiURL}${\r\n                    Object.values(constants.entities)[selectedIndex].apiPath\r\n                }/${id}`\r\n            )\r\n            .then((response) => console.log(response))\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const fetchData = async (mounted) => {\r\n        function sleep(ms) {\r\n            return new Promise((resolve) => setTimeout(resolve, ms));\r\n        }\r\n\r\n        // await sleep(2000);\r\n        await axios\r\n            .get(\r\n                `${constants.apiURL}${\r\n                    Object.values(constants.entities)[selectedIndex].apiPath\r\n                }/`\r\n            )\r\n            .then((response) => {\r\n                if (mounted) {\r\n                    console.log(response.data);\r\n                    setDataList(\r\n                        response.data.map((entity) =>\r\n                            Object.values(constants.entities)[\r\n                                selectedIndex\r\n                            ].alter(entity)\r\n                        )\r\n                    );\r\n                    setLoading(false);\r\n                }\r\n            });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(forms[selectedIndex]);\r\n        let isMounted = true;\r\n        setLoading(true);\r\n        fetchData(isMounted);\r\n        return () => {\r\n            isMounted = false;\r\n        };\r\n    }, [selectedIndex]);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={mainClasses.container}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography\r\n                            className={classes.someSpacing}\r\n                            variant=\"h4\"\r\n                            component=\"h4\"\r\n                        >\r\n                            Models\r\n                        </Typography>\r\n                        <Box>\r\n                            <Button onClick={() => setShowModelDrawer(true)}>\r\n                                Select Model\r\n                            </Button>\r\n\r\n                            <IconButton\r\n                                aria-label=\"refresh\"\r\n                                className={classes.someSpacing}\r\n                                onClick={handleRefresh}\r\n                            >\r\n                                <UpdateIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <LinearProgress\r\n                        className={\r\n                            loading ? classes.visible : classes.notVisible\r\n                        }\r\n                    />\r\n                    <BasicModelTable\r\n                        listOfData={dataList}\r\n                        title={\r\n                            Object.values(constants.entities)[selectedIndex]\r\n                                .name\r\n                        }\r\n                        onEdit={(_, data) => {\r\n                            console.log(data);\r\n                            setSelectedToEdit(data.id);\r\n                            setShowEdit(true);\r\n                        }}\r\n                        onDelete={(_, data) => {\r\n                            setSelectedToDelete(data);\r\n                            setShowDeleteAlert(true);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Fab\r\n                className={classes.floatingActionBtn}\r\n                onClick={handleAddDialogOpen}\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n            <AddDialog\r\n                shown={showDialog}\r\n                formIndex={selectedIndex}\r\n                cancelEvent={handleAddDialogClose}\r\n                applyEvent={() => {\r\n                    handleAddDialogClose();\r\n                    handleRefresh();\r\n                }}\r\n            />\r\n            <EditDialog\r\n                shown={showEdit}\r\n                formIndex={selectedIndex}\r\n                cancelEvent={handleCancelEditDialog}\r\n                applyEvent={handleApplyEditDialog}\r\n                itemId={selectedToEdit}\r\n            />\r\n            <DeleteDialog\r\n                shown={showDeleteAlert}\r\n                cancelEvent={cancelDeleteAlert}\r\n                applyEvent={indeedDeleteAlert}\r\n            />\r\n            <Drawer\r\n                anchor={\"right\"}\r\n                open={showModelDrawer}\r\n                onClose={() => setShowModelDrawer(false)}\r\n            >\r\n                {listGenerator(constants.models, selectedIndex, (_, index) => {\r\n                    setSelectedIndex(index);\r\n                    setShowModelDrawer(false);\r\n                })}\r\n            </Drawer>\r\n        </Container>\r\n    );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}