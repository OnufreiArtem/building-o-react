{"version":3,"sources":["components/mainStyles.jsx","components/constants.js","components/home/Home.jsx","components/info/Info.jsx","components/lists.jsx","components/model-table/ModelTable.jsx","components/utils.js","components/models/DeleteDialog.jsx","components/formGenerationEngine/utils.js","components/formGenerationEngine/BaseInput.js","components/formGenerationEngine/AutocompleteWidget.js","components/formGenerationEngine/SelectWidget.js","components/formGenerationEngine/CheckboxWidget.js","components/formGenerationEngine/DateWidget.js","components/formGenerationEngine/DateTimeWidget.js","components/formGenerationEngine/NumberWidget.js","components/formGenerationEngine/FieldTemplate.js","components/formGenerationEngine/Form.js","components/formGenerationEngine/RadioWidget.js","components/forms.js","components/models/AddDialog.jsx","components/models/EditDialog.jsx","components/models/Models.jsx","components/tasks/Task2.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","spaceDivider","paddingBottom","appBarSpacer","content","height","overflow","container","paddingTop","paper","flexDirection","fixedHeight","apiURL","createEntityUrl","index","Object","entries","entities","apiPath","models","none","defaultAlter","object","createdAt","modifiedAt","brigade","name","alter","chief","surname","specification","requires","brigadeSpec","building","plot","address","buildingStep","management","contract","customer","constructionManagement","projectFinishedDate","projectStartDate","signedDate","employee","employeeSpec","machinery","machineryStorage","storage","request","nObject","plan","brigadeThatAsked","undefined","scheduleEvent","beginning","ending","spending","task_1","first","second","task_2","useHomeStyles","modelListTitle","helloTitle","marginBottom","contentText","btnMargin","margin","numberInPage","paperHeight","Home","props","mainClasses","classes","React","useState","numberOfEmployees","setNumberOfEmployees","numberOfManagements","setNumberOfManagements","numberOfContracts","setNumberOfContracts","fetchNumbersData","a","axios","get","then","data","employeeNumber","managementNumber","contractsInProgress","useEffect","Container","Typography","variant","className","Grid","item","xs","Paper","align","useinfoStyles","textDecoration","Info","Link","href","underlineNone","Button","color","listGenerator","list","selectedIndex","onItemClicked","map","model","ListItem","selected","onClick","event","button","ListItemText","primary","nanoid","MainList","history","useHistory","push","ListItemIcon","AdditionalList","BasicModelTable","listOfData","noActions","onDelete","onEdit","columns","keys","filter","k","key","text","charAt","toUpperCase","slice","field","options","headerStyle","rowStyle","actions","tooltip","icon","DeleteDialog","shown","cancelEvent","applyEvent","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","getError","errors","info","FormHelperText","style","fontSize","marginTop","BaseInput","required","schema","value","onChange","rawErrors","TextField","error","length","disabled","label","target","autoComplete","InputProps","startAdornment","prefix","InputAdornment","endAdornment","suffix","InputLabelProps","type","format","Autocomplete","popperNode","handleStateChange","changes","hasOwnProperty","selectedItem","inputValue","this","suggestionComponent","isItemSelected","suggestion","suggestions","enumOptions","placeholder","console","log","Component","SelectWidget","AutocompleteWidget","FormControl","InputLabel","htmlFor","input","MenuProps","o","MenuItem","CheckboxWidget","FormGroup","FormControlLabel","control","checked","DateWidget","component","FormLabel","MuiPickersUtilsProvider","utils","DateFnsUtils","aria-label","Date","parse","date","toISOString","DateTimeWidget","Number","parseInt","replace","fillWidth","FieldTemplate","classNames","description","children","widgets","RadioWidget","RadioGroup","row","Radio","datetime","number","NumberWidget","Form","formData","onCancel","onSubmit","uiSchema","liveValidate","noHtml5Validate","showErrorList","forms","scheme","properties","anyOf","enum","active","widget","failed","finished","price","contactName","contactSurname","contactPhoneNumber","contactEMail","dateOfBirth","email","phoneNumber","salary","hiredDate","firedDate","defaultValue","usage","year","inUsage","satisfied","count","requestDate","satisfiedDate","useFormStyles","formStyles","border","formControl","divider","dummyProps","AddDialog","formIndex","formProps","setFormProps","dependencies","constants","requirements","promises","link","Promise","all","response","r","post","EditDialog","itemId","setData","fetchItemFromServer","res","obj","reduce","acc","curr","catch","err","put","useModelsStyles","floatingActionBtn","top","right","bottom","left","visible","visibility","notVisible","someSpacing","Models","setSelectedIndex","showDialog","setShowDialog","showEdit","setShowEdit","showModelDrawer","setShowModelDrawer","dataList","setDataList","loading","setLoading","showDeleteAlert","setShowDeleteAlert","selectedToDelete","setSelectedToDelete","selectedToEdit","setSelectedToEdit","handleAddDialogClose","handleRefresh","e","fetchData","cancelDeleteAlert","deleteData","delete","values","mounted","sleep","ms","resolve","setTimeout","entity","isMounted","maxWidth","Box","IconButton","LinearProgress","_","Fab","Drawer","anchor","useTask2Styles","Task2","earnings","earning","App","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","Divider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa81b2bf.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"0 8px\",\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: \"none\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: \"relative\",\r\n        whiteSpace: \"nowrap\",\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: \"hidden\",\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    spaceDivider: {\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n","import * as utils from './utils';\r\n\r\n\r\n// export const apiURL = \"http://localhost:8080/api/v1\";\r\nexport const apiURL = \"https://buildingo-backend.herokuapp.com/api/v1\";\r\n\r\nexport const createEntityUrl = (index) => apiURL + Object.entries(entities)[index][1].apiPath  \r\n\r\nexport const models = [\r\n    \"Brigade\",\r\n    \"Brigade Specification\",\r\n    \"Building\",\r\n    \"Building Steps\",\r\n    \"Construction Management\",\r\n    \"Contract\",\r\n    \"Customer\",\r\n    \"Employee\",\r\n    \"Employee Specification\",\r\n    // \"Estimate\",\r\n    \"Machinery\",\r\n    \"Machinery Storage\",\r\n    \"Plot\",\r\n    \"Request\",\r\n    // \"Schedule\",\r\n    \"Schedule Event\",\r\n    \"Spending\",\r\n];\r\n\r\nconst none = \"Not specified\";\r\n\r\nconst defaultAlter = (object) => ({\r\n    ...object,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterBrigade = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    specification: object.specification?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\nconst alterBuilding = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    plot: object.plot?.address || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterManagement = (object) => ({\r\n    ...object,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterContract = (object) => ({\r\n    ...object,\r\n    customer: object.customer?.name || none,\r\n    plot: object.plot?.address || none,\r\n    constructionManagement: object.constructionManagement?.name || none,\r\n    projectFinishedDate: utils.makeDateString(object.projectFinishedDate),\r\n    projectStartDate: utils.makeDateString(object.projectStartDate),\r\n    signedDate: utils.makeDateString(object.signedDate),\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterEmployee = (object) => ({\r\n    ...object,\r\n    specification: object.specification?.name || none,\r\n    brigade: object.brigade?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterMachinery = (object) => ({\r\n    ...object,\r\n    machineryStorage: object.machineryStorage?.name || none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterPlot = (object) => ({\r\n    ...object,\r\n    chief: object.chief\r\n        ? `${object.chief.name} ${object.chief.surname}`\r\n        : none,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n});\r\n\r\nconst alterRequest = (object) => {\r\n    let nObject = ({\r\n        ...object,\r\n        building: object.building?.plan || none,\r\n        brigadeThatAsked: undefined,\r\n        brigade: object.brigadeThatAsked?.name || none,\r\n        constructionManagement: object.constructionManagement?.name || none,\r\n        createdAt: utils.makeDateTimeString(object.createdAt),\r\n        modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n    });\r\n    delete nObject.brigadeThatAsked\r\n    return nObject\r\n} \r\n\r\nconst alterScheduleEvent = (object) => ({\r\n    ...object,\r\n    buildingStep: object.buildingStep?.name || none,\r\n    brigade: object.brigade?.name || none,\r\n    building: object.building === undefined ? none : object.building?.plan,\r\n    beginning: utils.makeDateString(object.beginning),\r\n    ending: utils.makeDateString(object.ending),\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterSpending = (object) => ({\r\n    ...object,\r\n    building: object.building === undefined ? none : object.building?.plot?.address,\r\n    createdAt: utils.makeDateTimeString(object.createdAt),\r\n    modifiedAt: utils.makeDateTimeString(object.modifiedAt)\r\n})\r\n\r\nconst alterTask1 = (object) => ({\r\n    ...object,\r\n    first: object.first?.address || none,\r\n    second: `${object.second.name} ${object.second.second}`,\r\n})\r\n\r\nexport const entities = {\r\n    brigade: { name: \"Brigade\", apiPath: \"/brigades\", alter: alterBrigade, requires: [\"/employees/names\", \"/brigade-specs/names\"] },\r\n    brigadeSpec: {\r\n        name: \"Brigade Specification\",\r\n        apiPath: \"/brigade-specs\",\r\n        alter: defaultAlter,\r\n        requires: []\r\n    },\r\n    building: { name: \"Building\", apiPath: \"/buildings\", alter: alterBuilding, requires: [\"/plots/addresses\", \"/employees/names\"] },\r\n    buildingStep: { name: \"Building Steps\", apiPath: \"/building-steps\", alter: defaultAlter, requires: [] },\r\n    management: { name: \"Construction Management\", apiPath: \"/managements\", alter: alterManagement, requires: [] },\r\n    contract: { name: \"Contract\", apiPath: \"/contracts\", alter: alterContract, requires: [\"/customers/contacts\", \"/managements/addresses\", \"/plots/addresses\"]},\r\n    customer: { name: \"Customer\", apiPath: \"/customers\", alter: defaultAlter, requires: [] },\r\n    employee: { name: \"Employee\", apiPath: \"/employees\", alter: alterEmployee, requires: [\"/employee-specs/names\", \"/brigades/names\"] },\r\n    employeeSpec: {\r\n        name: \"Employee Specification\",\r\n        apiPath: \"/employee-specs\",\r\n        alter: defaultAlter,\r\n        requires: []\r\n    },\r\n    // estimate: { name: \"Estimate\", apiPath: \"/estimates\", alter: alterEstimate },\r\n    machinery: { name: \"Machinery\", apiPath: \"/machineries\", alter: alterMachinery, requires: [\"/machinery-storages/addresses\"] },\r\n    storage: { name: \"Machinery Storage\", apiPath: \"/machinery-storages\", alter: defaultAlter, requires: [] },\r\n    plot: { name: \"Plot\", apiPath: \"/plots\", alter: alterPlot, requires: [\"/employees/names\"] },\r\n    request: { name: \"Request\", apiPath: \"/requests\", alter: alterRequest, requires: [\"/buildings/addresses\", \"/brigades/names\", \"/managements/addresses\"] },\r\n    // schedule: { name: \"Schedule\", apiPath: \"/schedules\", alter: alterSchedule },\r\n    scheduleEvent: { name: \"Schedule Event\", apiPath: \"/schedule-events\", alter: alterScheduleEvent, requires: [\"/buildings/addresses\", \"/building-steps/names\", \"/brigades/names\"] },\r\n    spending: { name: \"Spending\", apiPath: \"/spendings\", alter: alterSpending, requires: [\"/buildings/addresses\"] },\r\n    task_1: { name: \"Engineers from specified plot\", apiPath: \"/specials/engineers-from-plot\", alter: alterTask1 },\r\n    task_2: { name: \"Engineers from specified plot\", apiPath: \"/specials/managements-earnings\", alter: (object) => object }\r\n};\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {\r\n    createMuiTheme,\r\n    withStyles,\r\n    makeStyles,\r\n    ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"../mainStyles\";\r\nimport axios from \"axios\";\r\nimport { apiURL } from \"../constants\";\r\n\r\nconst useHomeStyles = makeStyles((theme) => ({\r\n    title: {},\r\n    modelListTitle: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    helloTitle: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    contentText: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    btnMargin: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    numberInPage: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    paperHeight: {\r\n        height: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default function Home(props) {\r\n    const mainClasses = useStyles();\r\n    const classes = useHomeStyles();\r\n\r\n    const [numberOfEmployees, setNumberOfEmployees] = React.useState(0);\r\n    const [numberOfManagements, setNumberOfManagements] = React.useState(0);\r\n    const [numberOfContracts, setNumberOfContracts] = React.useState(0);\r\n\r\n    const fetchNumbersData = async () => {\r\n        await axios.get(`${apiURL}/specials/main-numbers`).then(({ data }) => {\r\n            setNumberOfEmployees(data.employeeNumber);\r\n            setNumberOfManagements(data.managementNumber);\r\n            setNumberOfContracts(data.contractsInProgress);\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchNumbersData();\r\n    }, [numberOfEmployees, numberOfManagements, numberOfContracts]);\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\" className={classes.helloTitle}>\r\n                Hello!\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfEmployees}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Employees\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfManagements}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Managements\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper className={mainClasses.paper}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            align=\"center\"\r\n                            className={classes.numberInPage}\r\n                        >\r\n                            {numberOfContracts}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Contracts in Progress\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useinfoStyles = makeStyles((theme) => ({\r\n    title: {},\r\n    modelListTitle: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    helloTitle: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    contentText: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    btnMargin: {\r\n        textDecoration: 'none',\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Info(props) {\r\n    const classes = useinfoStyles();\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\" className={classes.helloTitle}>\r\n                Hello!\r\n            </Typography>\r\n\r\n            <Typography>\r\n                This is an application for building organization. This project\r\n                is powered with Spring Boot and React.\r\n            </Typography>\r\n            <Link href=\"https://github.com/OnufreiArtem\" underlineNone>\r\n                <Button\r\n                    className={classes.btnMargin}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    See my GitHub\r\n                </Button>\r\n            </Link>\r\n            <Link href=\"https://buildingo-backend.herokuapp.com/swagger-ui.html\" underlineNone>\r\n                <Button\r\n                    className={classes.btnMargin}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    See Swagger\r\n                </Button>\r\n            </Link>\r\n\r\n            <Typography>Developed by Artem Onufrei</Typography>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n// import SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const listGenerator = (list, selectedIndex, onItemClicked) => {\r\n    return (\r\n        <div>\r\n            {list.map((model, index) => (\r\n                <ListItem\r\n                    key={nanoid()}\r\n                    selected={\r\n                        selectedIndex !== undefined\r\n                            ? selectedIndex === index\r\n                            : false\r\n                    }\r\n                    onClick={(event) => onItemClicked !== undefined && onItemClicked(event, index)}\r\n                    button\r\n                >\r\n                    <ListItemText primary={model} />\r\n                </ListItem>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const listObjectGenerator = (list, selectedId, onItemClicked) => {\r\n    return (\r\n        <div>\r\n            {list.map((model) => (\r\n                <ListItem\r\n                    key={model.id}\r\n                    selected={\r\n                       model.id === selectedId\r\n                    }\r\n                    onClick={(event) => onItemClicked !== undefined && onItemClicked(event, model.id)}\r\n                    button\r\n                >\r\n                    <ListItemText primary={model.data} />\r\n                </ListItem>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MainList = (props) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <ListItem onClick={() => history.push(\"/\")} button>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem onClick={() => history.push(\"/models\")} button>\r\n                <ListItemIcon>\r\n                    <ClassIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Models\" />\r\n            </ListItem>\r\n            {/* <ListItem onClick={() => history.push(\"/settings\")} button>\r\n                <ListItemIcon>\r\n                    <SettingsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Settings\" />\r\n            </ListItem> */}\r\n            <ListItem onClick={() => history.push(\"/info\")} button>\r\n                <ListItemIcon>\r\n                    <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Info\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const AdditionalList = (props) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            {/* <ListItem onClick={() => history.push(\"/task_1\")} button>\r\n                <ListItemIcon>\r\n                    <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Employees from plots\" />\r\n            </ListItem> */}\r\n            <ListItem onClick={() => history.push(\"/task_1\")} button>\r\n                <ListItemIcon>\r\n                    <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Management income\" />\r\n            </ListItem>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport * as utils from \"../utils\";\r\n\r\nexport default function BasicModelTable({\r\n    listOfData,\r\n    title,\r\n    noActions = false,\r\n    onDelete,\r\n    onEdit,\r\n}) {\r\n    return (\r\n        <MaterialTable\r\n            columns={utils.generateColumns(\r\n                listOfData ? listOfData[0] : undefined\r\n            )}\r\n            options={{\r\n                // selection: true,\r\n                headerStyle: {\r\n                    whiteSpace: \"nowrap\",\r\n                },\r\n                rowStyle: {\r\n                    whiteSpace: \"nowrap\",\r\n                },\r\n            }}\r\n            data={listOfData}\r\n            title={title}\r\n            actions={\r\n                !noActions\r\n                    ? [\r\n                          {\r\n                              tooltip: \"Remove All Selected Items\",\r\n                              icon: \"delete\",\r\n                              onClick: onDelete,\r\n                          },\r\n                          {\r\n                              tooltip: \"Edit Selected Item\",\r\n                              icon: \"edit\",\r\n                              onClick: onEdit,\r\n                          },\r\n                      ]\r\n                    : []\r\n            }\r\n        />\r\n    );\r\n}\r\n","export const capitalize = (text) =>\r\n    text.charAt(0).toUpperCase() + text.slice(1);\r\n\r\nexport const generateColumns = (object) => {\r\n    if (object === undefined) return [];\r\n    const keys = Object.keys(object);\r\n    return keys\r\n        .filter((k) => k !== \"tableData\")\r\n        .map((key) => ({ title: capitalize(key), field: key }));\r\n};\r\n\r\nexport const makeFlat = (obj) => {\r\n    console.log(obj);\r\n    return Object.entries(obj).reduce(\r\n        (acc, curr) => {\r\n            if (typeof curr[1] === \"object\" && curr[1] !== null) acc[curr[0]] = curr[1].id;\r\n\r\n            return acc;\r\n        },\r\n        { ...obj }\r\n    );\r\n}\r\n    \r\n\r\nexport const makeValuesString = (obj) =>\r\n    Object.entries(obj).reduce(\r\n        (acc, curr) => {\r\n            if(typeof curr[1] !== 'boolean' && typeof curr[1] !== 'number') acc[curr[0]] = `${curr[1]}`;\r\n            return acc;\r\n        },\r\n        { ...obj }\r\n    );\r\n\r\nexport const makeDateTimeString = (localDateTime) => localDateTime;\r\nexport const makeDateString = (localDate) => localDate;\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function DeleteDialog({ shown, cancelEvent, applyEvent }) {\r\n    return (\r\n        <Dialog\r\n            open={shown}\r\n            onClose={cancelEvent}\r\n            aria-labelledby=\"form-delete-item\"\r\n        >\r\n            <DialogTitle id=\"form-delete-item\">Delete selection</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure, you want to delete this item?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={cancelEvent} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={applyEvent} color=\"primary\">\r\n                    Yes, Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { FormHelperText } from \"@material-ui/core\";\n\nexport const getError = errors => {\n  if (errors) {\n    return errors.map(info => (\n      <FormHelperText\n        style={{ color: \"red\", fontSize: 12, marginTop: 0, marginBottom: 8 }}\n        key={info}\n      >\n        {info}\n      </FormHelperText>\n    ))[0];\n  }\n  return null;\n};\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst BaseInput = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(value);\n  return (\n    <div>\n      <TextField\n        id={id}\n        error={!!(rawErrors && rawErrors.length)}\n        disabled={schema.disabled}\n        label={schema.title}\n        // to add a \"*\" in the label\n        required={required}\n        // null makes the component uncontrolled\n        value={value || \"\"}\n        // avoid the case of empty string considered as a value\n        // and not trigerring required validation\n        onChange={event => onChange(event.target.value || null)}\n        autoComplete={false}\n        InputProps={{\n          style: { fontSize: 18 },\n          startAdornment: schema.prefix ? (\n            <InputAdornment position=\"start\" style={{ fontSize: 22 }}>\n              {schema.prefix}\n            </InputAdornment>\n          ) : null,\n          endAdornment: schema.suffix ? (\n            <InputAdornment position=\"end\" style={{ fontSize: 22 }}>\n              {schema.suffix}\n            </InputAdornment>\n          ) : null\n        }}\n        InputLabelProps={{ style: { fontSize: 18 } }}\n        style={{ width: \"100%\", margin: 0, marginBottom: 20 }}\n        type={schema.format}\n      />\n      {getError(rawErrors)}\n    </div>\n  );\n};\n\nexport default BaseInput;\n","import React, { Component } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  Paper,\n  Popper,\n  TextField,\n  MenuItem,\n  FormHelperText\n} from \"@material-ui/core\";\n\nclass Autocomplete extends Component {\n  popperNode = null;\n  handleStateChange = changes => {\n    const { onChange } = this.props;\n    if (changes.hasOwnProperty(\"selectedItem\")) {\n      onChange(changes.selectedItem.value);\n    } else if (changes.hasOwnProperty(\"inputValue\")) {\n      onChange(changes.inputValue);\n    }\n  };\n  getError = errors => {\n    if (errors) {\n      return errors.map(info => (\n        <FormHelperText style={{ color: \"red\", fontSize: 12 }} key={info}>\n          {info}\n        </FormHelperText>\n      ));\n    }\n    return null;\n  };\n  // itemToString = item => (item ? item.label : \"\");\n  render() {\n    // const { id, required, schema, value, onChange, rawErrors, options } = props;\n    const {\n      id,\n      required,\n      schema,\n      value,\n      rawErrors,\n      options,\n      suggestionComponent = item => <span>{item.label}</span>,\n      isItemSelected = (selectedItem, suggestion) => {\n        if (typeof selectedItem === \"object\") {\n          return selectedItem.value === suggestion.value;\n        } else {\n          return selectedItem === suggestion.value;\n        }\n      }\n    } = this.props;\n    const suggestions = options.enumOptions;\n    const placeholder = `${schema.title}${required ? \"*\" : \"\"}`;\n    console.log(this.props);\n    console.log(suggestions, placeholder, isItemSelected, suggestionComponent);\n    return (\n      // <div>\n      //   <Downshift\n      //     selectedItem={value}\n      //     onStateChange={this.handleStateChange}\n      //     // itemToString={this.itemToString}\n      //   >\n      //     {({\n      //       getLabelProps,\n      //       getInputProps,\n      //       getItemProps,\n      //       getMenuProps,\n      //       highlightedIndex,\n      //       // inputValue,\n      //       isOpen,\n      //       selectedItem\n      //     }) => (\n      //       <div>\n      //         {/* For accessibility */}\n      //         <label {...getLabelProps({ style: { display: \"none\" } })}>\n      //           {placeholder}\n      //         </label>\n      //         {renderInput({\n      //           fullWidth: true,\n      //           InputProps: getInputProps({\n      //             placeholder,\n      //             id\n      //           }),\n      //           ref: node => {\n      //             this.popperNode = node;\n      //           },\n      //           autoComplete: \"nope\"\n      //         })}\n      //         <Popper open={isOpen} anchorEl={this.popperNode}>\n      //           <div\n      //             {...(isOpen\n      //               ? getMenuProps({}, { suppressRefError: true })\n      //               : {})}\n      //           >\n      //             <Paper\n      //               square\n      //               style={{\n      //                 marginTop: 8,\n      //                 width: this.popperNode\n      //                   ? this.popperNode.clientWidth\n      //                   : null\n      //               }}\n      //             >\n      //               {suggestions &&\n      //                 suggestions.map((suggestion, index) =>\n      //                   renderSuggestion({\n      //                     suggestion,\n      //                     index,\n      //                     itemProps: getItemProps({ item: suggestion }),\n      //                     highlightedIndex,\n      //                     selectedItem,\n      //                     suggestionComponent,\n      //                     isItemSelected\n      //                   })\n      //                 )}\n      //             </Paper>\n      //           </div>\n      //         </Popper>\n      //       </div>\n      //     )}\n      //   </Downshift>\n      //   {this.getError(rawErrors)}\n      // </div>\n      null\n    );\n  }\n}\n\nexport default Autocomplete;\n\nfunction renderInput(inputProps) {\n  const { InputProps, ref, style = {}, ...other } = inputProps;\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        ...InputProps,\n        style: {\n          fontSize: 14,\n          ...style\n        }\n      }}\n      {...other}\n    />\n  );\n}\nfunction renderSuggestion({\n  suggestion,\n  index,\n  itemProps,\n  highlightedIndex,\n  selectedItem,\n  suggestionComponent,\n  isItemSelected\n}) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = isItemSelected(selectedItem, suggestion); // (selectedItem || \"\").indexOf(suggestion.label) > -1;\n  const SuggestionComponent = suggestionComponent;\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400\n      }}\n    >\n      <SuggestionComponent suggestion={suggestion} />\n    </MenuItem>\n  );\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select as MSelect,\n  MenuItem,\n  Input as MInput\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\nimport MultiSelectWidget from \"./MultiSelectWidget\";\nimport AutocompleteWidget from \"./AutocompleteWidget\";\n\n// TODO: We can even add start and end adornments in the second phase\nconst SelectWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors, options } = props;\n\n  if (schema.type === \"array\") {\n    // return <MultiSelectWidget {...props} />;\n    return <AutocompleteWidget {...props} />;\n  }\n\n  return (\n    <FormControl\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\" }}\n    >\n      <InputLabel style={{ fontSize: 18 }} htmlFor={`${schema.title}-helper`}>\n        {schema.title}\n      </InputLabel>\n      <MSelect\n        id={id}\n        style={{ fontSize: 18, marginBottom: 20, width: 450 }}\n        value={value || \"\"}\n        onChange={event => onChange(event.target.value)}\n        name={schema.title}\n        input={<MInput name={schema.title} id={`${schema.title}-helper`} />}\n        MenuProps={{\n          style: {\n            fontSize: 18\n          }\n        }}\n      >\n        {options &&\n          options.enumOptions.map(o => (\n            <MenuItem\n              key={o.value}\n              value={o.value}\n              style={{\n                fontSize: 18,\n                padding: \"4px 16px\"\n              }}\n            >\n              {o.label}\n            </MenuItem>\n          ))}\n      </MSelect>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox as MCheckbox\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst CheckboxWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(\"c\", value);\n  return (\n    <FormControl\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\" }}\n    >\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <MCheckbox\n              id={id}\n              name={id}\n              checked={!!value}\n              onChange={event => onChange(event.target.checked)}\n              value={schema.title}\n            />\n          }\n          label={schema.title}\n        />\n      </FormGroup>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n} from \"@material-ui/core\";\r\nimport 'date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getError } from \"./utils\";\r\n\r\nconst DateWidget = (props) => {\r\n    const { id, required, schema, value, onChange, rawErrors } = props;\r\n    return (\r\n        <FormControl\r\n            component=\"fieldset\"\r\n            disabled={schema.disabled}\r\n            required={required}\r\n            error={!!(rawErrors && rawErrors.length)}\r\n            style={{ width: \"100%\", marginTop: 18 }}\r\n        >\r\n            <FormLabel style={{ fontSize: 18 }} component=\"legend\">\r\n                {schema.title}\r\n            </FormLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    id={id}\r\n                    aria-label={schema.title}\r\n                    name={schema.title}\r\n                    variant=\"inline\"\r\n                    format=\"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    value={Date.parse(value || \" \")}\r\n                    onChange={(date) => {console.log(date !== null ? date.toISOString().slice(0, 10) : null); onChange(date !== null ? date.toISOString().slice(0, 10) : null)}}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {getError(rawErrors) && getError(rawErrors)[0]}\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default DateWidget;\r\n","import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Radio,\r\n} from \"@material-ui/core\";\r\nimport 'date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getError } from \"./utils\";\r\n\r\nconst DateTimeWidget = (props) => {\r\n    const { id, required, schema, value, onChange, rawErrors } = props;\r\n    return (\r\n        <FormControl\r\n            component=\"fieldset\"\r\n            disabled={schema.disabled}\r\n            required={required}\r\n            error={!!(rawErrors && rawErrors.length)}\r\n            style={{ width: \"100%\", marginTop: 18 }}\r\n        >\r\n            <FormLabel style={{ fontSize: 18 }} component=\"legend\">\r\n                {schema.title}\r\n            </FormLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    id={id}\r\n                    aria-label={schema.title}\r\n                    name={schema.title}\r\n                    variant=\"inline\"\r\n                    margin=\"normal\"\r\n                    value={Date.parse(value)}\r\n                    onChange={(date) => onChange(date.toISOString())}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {getError(rawErrors) && getError(rawErrors)[0]}\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default DateTimeWidget;\r\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst BaseInput = props => {\n  const { id, required, schema, value, onChange, rawErrors } = props;\n  // console.log(value);\n  return (\n    <div>\n      <TextField\n        id={id}\n        error={!!(rawErrors && rawErrors.length)}\n        disabled={schema.disabled}\n        label={schema.title}\n        // to add a \"*\" in the label\n        required={required}\n        // null makes the component uncontrolled\n        value={value || 0}\n        // avoid the case of empty string considered as a value\n        // and not trigerring required validation\n        onChange={event => onChange(Number.parseInt(event.target.value.replace(\"/[^d]/\", \"\")) || null)}\n        fillWidth\n        autoComplete=\"nope\"\n        InputProps={{\n          style: { fontSize: 18 },\n          startAdornment: schema.prefix ? (\n            <InputAdornment position=\"start\" style={{ fontSize: 18 }}>\n              {schema.prefix}\n            </InputAdornment>\n          ) : null,\n          endAdornment: schema.suffix ? (\n            <InputAdornment position=\"end\" style={{ fontSize: 18 }}>\n              {schema.suffix}\n            </InputAdornment>\n          ) : null\n        }}\n        InputLabelProps={{ style: { fontSize: 18 } }}\n        style={{ width: \"100%\", margin: 0, marginBottom: 20 }}\n        type={schema.format}\n      />\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </div>\n  );\n};\n\nexport default BaseInput;\n","import React from \"react\";\n\nfunction FieldTemplate(props) {\n  const { classNames, description, children } = props;\n  return (\n    <div className={classNames}>\n      {description}\n      {children}\n    </div>\n  );\n}\n\nexport default FieldTemplate;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport MForm from \"react-jsonschema-form\";\nimport BaseInput from \"./BaseInput\";\nimport SelectWidget from \"./SelectWidget\";\nimport CheckboxWidget from \"./CheckboxWidget\";\nimport DateWidget from \"./DateWidget\";\nimport DateTimeWidget from \"./DateTimeWidget\";\nimport NumberWidget from \"./NumberWidget\";\nimport FieldTemplate from \"./FieldTemplate\";\nimport RadioWidget from \"./RadioWidget\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst widgets = {\n    BaseInput,\n    SelectWidget,\n    CheckboxWidget,\n    RadioWidget,\n    DateWidget,\n    datetime: DateTimeWidget,\n    number: NumberWidget,\n};\n\nconst Form = ({\n    title,\n    formData={},\n    onCancel,\n    onSubmit,\n    uiSchema = {},\n    schema,\n    liveValidate = true,\n}) => {\n    return (\n        <div style={{  }}>\n            <DialogTitle><Typography variant=\"h4\" component=\"h5\" align=\"center\">{title}</Typography></DialogTitle>\n            <DialogContent>\n                <MForm\n                    formData={formData}\n                    style={{width: 500, padding: 10,}}\n                    noHtml5Validate\n                    FieldTemplate={FieldTemplate}\n                    schema={schema}\n                    uiSchema={uiSchema}\n                    widgets={widgets}\n                    showErrorList={false}\n                    liveValidate={liveValidate}\n                    onSubmit={onSubmit}\n                >\n                    <DialogActions>\n                        <Button\n                            onClick={onCancel}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </MForm>\n            </DialogContent>\n        </div>\n    );\n};\n\nexport default Form;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio\n} from \"@material-ui/core\";\nimport { getError } from \"./utils\";\n\nconst RadioWidget = props => {\n  const { id, required, schema, value, onChange, rawErrors, options } = props;\n  return (\n    <FormControl\n      component=\"fieldset\"\n      disabled={schema.disabled}\n      required={required}\n      error={!!(rawErrors && rawErrors.length)}\n      style={{ width: \"100%\", marginTop: 22 }}\n    >\n      <FormLabel style={{ fontSize: 22 }} component=\"legend\">\n        {schema.title}\n      </FormLabel>\n      <RadioGroup\n        id={id}\n        aria-label={schema.title}\n        name={schema.title}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        row\n      >\n        {options &&\n          options.enumOptions.map(o => (\n            <FormControlLabel\n              key={o.value}\n              value={o.value}\n              control={<Radio />}\n              label={o.label}\n              disabled={o.disabled}\n            />\n          ))}\n      </RadioGroup>\n      {getError(rawErrors) && getError(rawErrors)[0]}\n    </FormControl>\n  );\n};\n\nexport default RadioWidget;\n","export const forms = [\r\n    /* Brigade */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"specification\", \"chief\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Brigade name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                specification: {\r\n                    type: \"string\",\r\n                    title: \"Specification\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Brigade Specification */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Building */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"chief\", \"plan\", \"plot\"],\r\n            properties: {\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                plan: {\r\n                    type: \"string\",\r\n                    title: \"Plan\",\r\n                },\r\n                plot: {\r\n                    type: \"string\",\r\n                    title: \"Plot\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Building Step */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Construction Management */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"address\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Contract */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"constructionManagement\",\r\n                \"plot\",\r\n                \"customer\",\r\n                \"price\",\r\n                \"signedDate\",\r\n            ],\r\n            properties: {\r\n                constructionManagement: {\r\n                    type: \"string\",\r\n                    title: \"Management\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                plot: {\r\n                    type: \"string\",\r\n                    title: \"Plot\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                customer: {\r\n                    type: \"string\",\r\n                    title: \"Customer\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                failed: {\r\n                    type: \"boolean\",\r\n                    title: \"Failed\",\r\n                },\r\n                finished: {\r\n                    type: \"boolean\",\r\n                    title: \"Finished\",\r\n                },\r\n                price: {\r\n                    type: \"number\",\r\n                    title: \"Price\",\r\n                },\r\n                signedDate: {\r\n                    type: \"string\",\r\n                    title: \"Signed date\",\r\n                    format: \"date\",\r\n                },\r\n                projectStartDate: {\r\n                    type: \"string\",\r\n                    title: \"Start date\",\r\n                },\r\n                projectFinishedDate: {\r\n                    type: \"string\",\r\n                    title: \"Finish date\",\r\n                    format: \"date\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            price: {\r\n                \"ui:widget\": \"number\"\r\n            },\r\n            projectStartDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            projectFinishedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            signedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Customer */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"type\",\r\n                \"contactName\",\r\n                \"contactSurname\",\r\n                \"contactEMail\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Person\",\r\n                            enum: [\"PERSON\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Organization\",\r\n                            enum: [\"ORGANIZATION\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Company\",\r\n                            enum: [\"COMPANY\"],\r\n                        },\r\n                    ],\r\n                },\r\n                contactName: {\r\n                    type: \"string\",\r\n                    title: \"Contact Name\",\r\n                },\r\n                contactSurname: {\r\n                    type: \"string\",\r\n                    title: \"Contact Surname\",\r\n                },\r\n                contactPhoneNumber: {\r\n                    type: \"string\",\r\n                    title: \"Contact Phone Number\",\r\n                },\r\n                contactEMail: {\r\n                    type: \"string\",\r\n                    title: \"Contact Email\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Employee */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"surname\",\r\n                \"specification\",\r\n                \"dateOfBirth\",\r\n                \"email\",\r\n                \"salary\",\r\n                \"hiredDate\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                surname: {\r\n                    type: \"string\",\r\n                    title: \"Surname\",\r\n                },\r\n                specification: {\r\n                    type: \"string\",\r\n                    title: \"Specification\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                dateOfBirth: {\r\n                    type: \"string\",\r\n                    title: \"Date Of Birth\",\r\n                    format: \"date\",\r\n                },\r\n                brigade: {\r\n                    type: \"string\",\r\n                    title: \"Brigade\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                email: {\r\n                    type: \"string\",\r\n                    title: \"Email\",\r\n                },\r\n                phoneNumber: {\r\n                    type: \"string\",\r\n                    title: \"Phone Number\",\r\n                },\r\n                salary: {\r\n                    type: \"number\",\r\n                    title: \"Salary\",\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n                hiredDate: {\r\n                    type: \"string\",\r\n                    title: \"HiredDate\",\r\n                },\r\n                firedDate: {\r\n                    type: \"string\",\r\n                    title: \"FiredDate\",\r\n                    defaultValue: \"\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            salary: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            dateOfBirth: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            hiredDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            firedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Employee Specification */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"description\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Person\",\r\n                            enum: [\"ENGINEER\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Organization\",\r\n                            enum: [\"GENERAL\"],\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Machinery */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"number\", \"model\", \"usage\", \"year\", \"machineryStorage\"],\r\n            properties: {\r\n                number: {\r\n                    type: \"string\",\r\n                    title: \"Number\",\r\n                },\r\n                model: {\r\n                    type: \"string\",\r\n                    title: \"Model\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                usage: {\r\n                    type: \"string\",\r\n                    title: \"Usage\",\r\n                },\r\n                year: {\r\n                    type: \"string\",\r\n                    title: \"Year\",\r\n                },\r\n                inUsage: {\r\n                    type: \"boolean\",\r\n                    title: \"In Usage\",\r\n                },\r\n                machineryStorage: {\r\n                    type: \"string\",\r\n                    title: \"MachineryStorage\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                active: {\r\n                    type: \"boolean\",\r\n                    title: \"Active\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {},\r\n    },\r\n    /* Machinery Storage */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"address\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n            },\r\n        }),\r\n        widget: {},\r\n    },\r\n    /* Plot */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"address\"],\r\n            properties: {\r\n                address: {\r\n                    type: \"string\",\r\n                    title: \"Address\",\r\n                },\r\n                chief: {\r\n                    type: \"string\",\r\n                    title: \"Chief\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n        widget: {},\r\n    },\r\n    /* Request */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"title\",\r\n                \"type\",\r\n                \"building\",\r\n                \"constructionManagement\",\r\n                \"date\",\r\n                \"brigadeThatAsked\",\r\n            ],\r\n            properties: {\r\n                title: {\r\n                    type: \"string\",\r\n                    title: \"Title\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                type: {\r\n                    type: \"string\",\r\n                    title: \"Type\",\r\n                    anyOf: [\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Resource\",\r\n                            enum: [\"RESOURCE\"],\r\n                        },\r\n                        {\r\n                            type: \"string\",\r\n                            title: \"Machinery\",\r\n                            enum: [\"MACHINERY\"],\r\n                        },\r\n                    ],\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Buildinge\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                constructionManagement: {\r\n                    type: \"string\",\r\n                    title: \"Construction Management\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                date: {\r\n                    type: \"string\",\r\n                    title: \"Date\",\r\n                    format: \"date\",\r\n                },\r\n                satisfied: {\r\n                    type: \"boolean\",\r\n                    title: \"Satisfied\",\r\n                },\r\n                brigadeThatAsked: {\r\n                    type: \"string\",\r\n                    title: \"Brigade That Asked\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            date: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n    /* Schedule Event */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\r\n                \"name\",\r\n                \"description\",\r\n                \"building\",\r\n                \"brigade\",\r\n                \"buildingStep\",\r\n                \"beginning\",\r\n                \"ending\",\r\n            ],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Building\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                brigade: {\r\n                    type: \"string\",\r\n                    title: \"Brigade\",\r\n                    anyOf: props[2].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                buildingStep: {\r\n                    type: \"string\",\r\n                    title: \"Building Step\",\r\n                    anyOf: props[1].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                beginning: {\r\n                    type: \"string\",\r\n                    title: \"Beginning\",\r\n                },\r\n                ending: {\r\n                    type: \"string\",\r\n                    title: \"Ending\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            beginning: {\r\n                \"ui:widget\": \"datetime\",\r\n            },\r\n            ending: {\r\n                \"ui:widget\": \"datetime\",\r\n            },\r\n        },\r\n    },\r\n    /* Spending */\r\n    {\r\n        scheme: (props) => ({\r\n            type: \"object\",\r\n            required: [\"name\", \"price\", \"count\", \"building\", \"requestDate\"],\r\n            properties: {\r\n                name: {\r\n                    type: \"string\",\r\n                    title: \"Name\",\r\n                },\r\n                description: {\r\n                    type: \"string\",\r\n                    title: \"Description\",\r\n                },\r\n                price: {\r\n                    type: \"number\",\r\n                    title: \"Price\",\r\n                },\r\n                count: {\r\n                    type: \"number\",\r\n                    title: \"Count\",\r\n                },\r\n                building: {\r\n                    type: \"string\",\r\n                    title: \"Building\",\r\n                    anyOf: props[0].map((data) => ({\r\n                        type: \"string\",\r\n                        title: data.second,\r\n                        enum: [data.first],\r\n                    })),\r\n                },\r\n                requestDate: {\r\n                    type: \"string\",\r\n                    title: \"Request Date\",\r\n                    format: \"date\",\r\n                },\r\n                satisfiedDate: {\r\n                    type: \"string\",\r\n                    title: \"Satisfied Date\",\r\n                    format: \"date\",\r\n                },\r\n            },\r\n        }),\r\n\r\n        widget: {\r\n            count: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            price: {\r\n                \"ui:widget\": \"number\",\r\n            },\r\n            requestDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n            satisfiedDate: {\r\n                \"ui:widget\": \"date\",\r\n            },\r\n        },\r\n    },\r\n];\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Form from \"../formGenerationEngine\";\r\nimport * as constants from \"../constants\";\r\nimport { forms } from \"../forms\";\r\nimport axios from \"axios\";\r\n\r\nconst useFormStyles = makeStyles((theme) => ({\r\n    formStyles: {\r\n        padding: theme.spacing(5),\r\n        border: \"none\",\r\n    },\r\n    formControl: {\r\n        width: \"300px\",\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst dummyProps = [\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n]\r\n\r\nexport default function AddDialog({\r\n    shown,\r\n    cancelEvent,\r\n    applyEvent,\r\n    formIndex,\r\n}) {\r\n    const classes = useFormStyles();\r\n    const [formProps, setFormProps] = React.useState(dummyProps) \r\n\r\n    const onSubmit = ({ formData }) => {\r\n        axios.post(constants.createEntityUrl(formIndex) + '/', formData);\r\n        applyEvent();\r\n    };\r\n\r\n    const refreshDependencies = () => {\r\n        dependencies(Object.entries(constants.entities)[formIndex][1].requires)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(shown) {\r\n            refreshDependencies();\r\n        }\r\n    }, [shown])\r\n\r\n    const dependencies = (requirements) => {\r\n        const promises = requirements.map(link => axios.get(constants.apiURL + link));\r\n        Promise.all(promises).then(response => {console.log(response); setFormProps(response.map(r => r.data))});\r\n    }\r\n\r\n    return (\r\n        <Dialog open={shown} aria-labelledby=\"form-add-item\">\r\n            \r\n            <Form\r\n                title={`Add ${\r\n                    Object.entries(constants.entities)[formIndex][1].name\r\n                }`}\r\n                onCancel={cancelEvent}\r\n                className={classes.formStyles}\r\n                schema={formProps.length !== Object.entries(constants.entities)[formIndex][1].requires.length ? forms[formIndex].scheme(dummyProps) : forms[formIndex].scheme(formProps)}\r\n                onSubmit={onSubmit}\r\n                uiSchema={forms[formIndex].widget}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n/*\r\n{formIndex !== undefined ? (\r\n    <Form\r\n    title={`Add ${\r\n        Object.entries(constants.entities)[formIndex].name\r\n    }`}\r\n    onCancel={cancelEvent}\r\n    className={classes.formStyles}\r\n    schema={forms[formIndex].schema(\r\n        Object.entries(constants.entities)[\r\n            formIndex\r\n        ][1].requires.map((path) => {\r\n            let value = [];\r\n            (async () => {\r\n                const r = await axios.get(constants.apiURL + path)\r\n                value = r.data\r\n            })();\r\n            return value;\r\n        })\r\n    )}\r\n    onSubmit={onSubmit}\r\n    uiSchema={forms[formIndex].widget}\r\n/>\r\n) : <span>Error creating add dialog</span>} \r\n*/\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Form from \"../formGenerationEngine\";\r\nimport * as constants from \"../constants\";\r\nimport { forms } from \"../forms\";\r\nimport * as utils from \"../utils\"\r\nimport axios from \"axios\";\r\n\r\nconst useFormStyles = makeStyles((theme) => ({\r\n    formStyles: {\r\n        padding: theme.spacing(5),\r\n        border: \"none\",\r\n    },\r\n    formControl: {\r\n        width: \"300px\",\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst dummyProps = [\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n    [{ first: \"\", second: \"No data\" }],\r\n];\r\n\r\nexport default function EditDialog({\r\n    shown,\r\n    cancelEvent,\r\n    applyEvent,\r\n    formIndex,\r\n    itemId,\r\n}) {\r\n    const classes = useFormStyles();\r\n    const [formProps, setFormProps] = React.useState(dummyProps);\r\n    const [data, setData] = React.useState({});\r\n\r\n    const onSubmit = ({ formData }) => {\r\n        axios.put(constants.createEntityUrl(formIndex) + \"/\", {...data, ...formData});\r\n        applyEvent();\r\n    };\r\n\r\n    const refreshDependencies = () => {\r\n        dependencies(Object.entries(constants.entities)[formIndex][1].requires);\r\n    };\r\n\r\n    const fetchItemFromServer = () => {\r\n        axios\r\n            .get(\r\n                `${constants.apiURL}${\r\n                    Object.entries(constants.entities)[formIndex][1].apiPath\r\n                }/${itemId}`\r\n            )\r\n            .then((res) => {\r\n                setData(utils.makeValuesString(utils.makeFlat(res.data)));\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (shown) {\r\n            refreshDependencies();\r\n            fetchItemFromServer();\r\n        }\r\n    }, [shown]);\r\n\r\n    const dependencies = (requirements) => {\r\n        const promises = requirements.map((link) =>\r\n            axios.get(constants.apiURL + link)\r\n        );\r\n        Promise.all(promises).then((response) => {\r\n            console.log(response);\r\n            setFormProps(response.map((r) => r.data));\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Dialog open={shown} aria-labelledby=\"form-add-item\">\r\n            <Form\r\n                title={`Edit ${\r\n                    Object.entries(constants.entities)[formIndex][1].name\r\n                }`}\r\n                formData={data}\r\n                onCancel={cancelEvent}\r\n                className={classes.formStyles}\r\n                schema={\r\n                    formProps.length !==\r\n                    Object.entries(constants.entities)[formIndex][1].requires\r\n                        .length\r\n                        ? forms[formIndex].scheme(dummyProps)\r\n                        : forms[formIndex].scheme(formProps)\r\n                }\r\n                onSubmit={onSubmit}\r\n                uiSchema={forms[formIndex].widget}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"../mainStyles\";\r\nimport { listGenerator } from \"../lists\";\r\nimport * as constants from \"../constants\";\r\nimport BasicModelTable from \"../model-table/ModelTable\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport axios from \"axios\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { forms } from \"../forms\";\r\nimport EditDialog from \"./EditDialog\";\r\n\r\nconst useModelsStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    floatingActionBtn: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 50,\r\n        bottom: 50,\r\n        left: \"auto\",\r\n        position: \"fixed\",\r\n    },\r\n    visible: {\r\n        visibility: \"visible\",\r\n    },\r\n    notVisible: {\r\n        visibility: \"hidden\",\r\n    },\r\n    someSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Models(props) {\r\n    const mainClasses = useStyles();\r\n    const classes = useModelsStyles();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [showEdit, setShowEdit] = React.useState(false);\r\n    const [showModelDrawer, setShowModelDrawer] = React.useState(false);\r\n    const [dataList, setDataList] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = React.useState(false);\r\n    const [selectedToDelete, setSelectedToDelete] = React.useState(undefined);\r\n    const [selectedToEdit, setSelectedToEdit] = React.useState(undefined);\r\n\r\n    const handleAddDialogOpen = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const handleAddDialogClose = () => {\r\n        setShowDialog(false);\r\n    };\r\n\r\n    const handleCancelEditDialog = () => {\r\n        setShowEdit(false);\r\n        setSelectedToEdit(undefined);\r\n    }\r\n\r\n    const handleApplyEditDialog = () => {\r\n        setShowEdit(false);\r\n        setSelectedToEdit(undefined);\r\n        handleRefresh();\r\n    }\r\n\r\n    const handleDelete = (env, data) => {\r\n        deleteData(data.id);\r\n        handleRefresh();\r\n    };\r\n\r\n    const handleRefresh = (e) => {\r\n        setLoading(true);\r\n        fetchData(true);\r\n    };\r\n\r\n    const cancelDeleteAlert = () => {\r\n        setShowDeleteAlert(false);\r\n        setSelectedToDelete(undefined);\r\n    };\r\n\r\n    const indeedDeleteAlert = () => {\r\n        handleDelete(undefined, selectedToDelete);\r\n        cancelDeleteAlert();\r\n    };\r\n\r\n    const deleteData = async (id) => {\r\n        await axios\r\n            .delete(\r\n                `${constants.apiURL}${\r\n                    Object.values(constants.entities)[selectedIndex].apiPath\r\n                }/${id}`\r\n            )\r\n            .then((response) => console.log(response))\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const fetchData = async (mounted) => {\r\n        function sleep(ms) {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        }\r\n        await sleep(500)\r\n        await axios\r\n            .get(\r\n                `${constants.apiURL}${\r\n                    Object.values(constants.entities)[selectedIndex].apiPath\r\n                }/`\r\n            )\r\n            .then((response) => {\r\n                if (mounted) {\r\n                    console.log(response.data);\r\n                    setDataList(\r\n                        response.data.map((entity) =>\r\n                            Object.values(constants.entities)[\r\n                                selectedIndex\r\n                            ].alter(entity)\r\n                        )\r\n                    );\r\n                    setLoading(false);\r\n                }\r\n            });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(forms[selectedIndex]);\r\n        let isMounted = true;\r\n        setLoading(true);\r\n        fetchData(isMounted);\r\n        return () => {\r\n            isMounted = false;\r\n        };\r\n    }, [selectedIndex]);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={mainClasses.container}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography\r\n                            className={classes.someSpacing}\r\n                            variant=\"h4\"\r\n                            component=\"h4\"\r\n                        >\r\n                            Models\r\n                        </Typography>\r\n                        <Box>\r\n                            <Button onClick={() => setShowModelDrawer(true)}>\r\n                                Select Model\r\n                            </Button>\r\n\r\n                            <IconButton\r\n                                aria-label=\"refresh\"\r\n                                className={classes.someSpacing}\r\n                                onClick={handleRefresh}\r\n                            >\r\n                                <UpdateIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <LinearProgress\r\n                        className={\r\n                            loading ? classes.visible : classes.notVisible\r\n                        }\r\n                    />\r\n                    <BasicModelTable\r\n                        listOfData={dataList}\r\n                        title={\r\n                            Object.values(constants.entities)[selectedIndex]\r\n                                .name\r\n                        }\r\n                        onEdit={(_, data) => {\r\n                            console.log(data);\r\n                            setSelectedToEdit(data.id);\r\n                            setShowEdit(true);\r\n                        }}\r\n                        onDelete={(_, data) => {\r\n                            setSelectedToDelete(data);\r\n                            setShowDeleteAlert(true);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Fab\r\n                className={classes.floatingActionBtn}\r\n                onClick={handleAddDialogOpen}\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n            <AddDialog\r\n                shown={showDialog}\r\n                formIndex={selectedIndex}\r\n                cancelEvent={handleAddDialogClose}\r\n                applyEvent={() => {\r\n                    handleAddDialogClose();\r\n                    handleRefresh();\r\n                }}\r\n            />\r\n            <EditDialog\r\n                shown={showEdit}\r\n                formIndex={selectedIndex}\r\n                cancelEvent={handleCancelEditDialog}\r\n                applyEvent={handleApplyEditDialog}\r\n                itemId={selectedToEdit}\r\n            />\r\n            <DeleteDialog\r\n                shown={showDeleteAlert}\r\n                cancelEvent={cancelDeleteAlert}\r\n                applyEvent={indeedDeleteAlert}\r\n            />\r\n            <Drawer\r\n                anchor={\"right\"}\r\n                open={showModelDrawer}\r\n                onClose={() => setShowModelDrawer(false)}\r\n            >\r\n                {listGenerator(constants.models, selectedIndex, (_, index) => {\r\n                    setSelectedIndex(index);\r\n                    setShowModelDrawer(false);\r\n                })}\r\n            </Drawer>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    Button,\r\n    LinearProgress,\r\n    Drawer,\r\n} from \"@material-ui/core\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BasicModelTable from \"../model-table/ModelTable\";\r\nimport * as constants from \"../constants\";\r\nimport { listObjectGenerator } from \"../lists\";\r\nimport axios from \"axios\";\r\n\r\nconst useTask2Styles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    floatingActionBtn: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 50,\r\n        bottom: 50,\r\n        left: \"auto\",\r\n        position: \"fixed\",\r\n    },\r\n    visible: {\r\n        visibility: \"visible\",\r\n    },\r\n    notVisible: {\r\n        visibility: \"hidden\",\r\n    },\r\n    someSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Task2(props) {\r\n    const classes = useTask2Styles();\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [dataList, setDataList] = React.useState([]);\r\n\r\n    const fetchData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get(constants.apiURL + constants.entities.task_2.apiPath + '/')\r\n            .then((response) => {\r\n                setDataList(response.data);\r\n                setLoading(false);\r\n            });\r\n    };\r\n    \r\n    const handleRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    React.useEffect(handleRefresh, []);\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography\r\n                            className={classes.someSpacing}\r\n                            variant=\"h4\"\r\n                            component=\"h4\"\r\n                        >\r\n                        </Typography>\r\n                        <Box>\r\n                            <IconButton\r\n                                aria-label=\"refresh\"\r\n                                className={classes.someSpacing}\r\n                                onClick={handleRefresh}\r\n                            >\r\n                                <UpdateIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <LinearProgress\r\n                        className={\r\n                            loading ? classes.visible : classes.notVisible\r\n                        }\r\n                    />\r\n                    <BasicModelTable\r\n                        listOfData={dataList.map((item) => ({\r\n                            id: item.management.id,\r\n                            name: item.management.name,\r\n                            address: item.management.address,\r\n                            earnings: item.earning,\r\n                        }))}\r\n                        noActions={true}\r\n                        title=\"The income from managements\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Home from \"./home/Home\";\nimport Info from \"./info/Info\";\nimport Models from \"./models/Models\";\nimport { useStyles } from \"./mainStyles\";\nimport { MainList, AdditionalList } from \"./lists\";\n// import Task1 from './tasks/Task1';\nimport Task2 from './tasks/Task2';\n\nexport default function App(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [collapseOpen, setCollapseOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"absolute\"\n                    className={clsx(\n                        classes.appBar,\n                        open && classes.appBarShift\n                    )}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            className={clsx(\n                                classes.menuButton,\n                                open && classes.menuButtonHidden\n                            )}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Building Organization Application\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                {/* Drawer */}\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(\n                            classes.drawerPaper,\n                            !open && classes.drawerPaperClose\n                        ),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <MainList />\n                    <Divider />\n                    <AdditionalList />\n                </Drawer>\n\n                {/* Main Content */}\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <div className={classes.spaceDivider} />\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/models\">\n                            <Models />\n                        </Route>\n                        <Route path=\"/settings\">\n                            <Typography>Settings</Typography>\n                        </Route>\n                        <Route path=\"/info\">\n                            <Info />\n                        </Route>\n                        <Route path=\"/task_1\">\n                            {/* <Task1 /> */}\n                            <Task2 />\n                        </Route>\n                        {/* <Route path=\"/task_2\">\n                            <Task2 />\n                        </Route> */}\n                    </Switch>\n                </main>\n            </div>\n        </Router>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}